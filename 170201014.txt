<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools" >

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.FindWordsGame"
        tools:targetApi="31" >
        <activity
            android:name=".AboutGameActivity"
            android:exported="false" >
            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
        <activity
            android:name=".ScoreTableActivity"
            android:exported="false" >
            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
        <activity
            android:name=".MainActivity"
            android:exported="false" >
            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
        <activity
            android:name=".MainActivity2"
            android:exported="false" >
            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
        <activity
            android:name=".FirstPageActivity"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
    </application>

</manifest>





package com.mytutorials.findwordsgame;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

public class FirstPageActivity extends AppCompatActivity {
    Button btnNewGame,btnScoreTable,btnExit,btnAboutgame;
    ImageView imgCover;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_first_page);
        btnNewGame=findViewById(R.id.btn_new_game);
        btnScoreTable=findViewById(R.id.btn_score_table);
        btnExit=findViewById(R.id.btn_exit);
        btnAboutgame=findViewById(R.id.btn_about_game);
        assetFileToDb();

        btnNewGame.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(FirstPageActivity.this,MainActivity.class);
                finish();
                startActivity(intent);
            }
        });



        btnScoreTable.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(FirstPageActivity.this,ScoreTableActivity.class);
                finish();
                startActivity(intent);
            }
        });


        btnExit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                alertDialogForExit();

            }
        });


        btnAboutgame.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(FirstPageActivity.this,AboutGameActivity.class);
                finish();
                startActivity(intent);
            }
        });







    }

    private void alertDialogForExit() {
        AlertDialog.Builder alert = new AlertDialog.Builder(FirstPageActivity.this);
        alert.setTitle(" Find Words Game ");
        alert.setMessage("Are you sure exit?");
        alert.setCancelable(false);//kapatılamaz
        //alert.setIcon(R.mipmap.);//iconlarımız mipmap klasörü içindedir
        alert.setPositiveButton("NO", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                dialogInterface.dismiss();
                ;

            }
        });
        alert.setNegativeButton("YES", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {

                android.os.Process.killProcess(android.os.Process.myPid());
                System.exit(0);

            }
        });
        alert.show();
    }

    @Override
    public void onBackPressed() {
        alertDialogForExit();
    }

    private void assetFileToDb() {
        try {
            final String DB_DESTINATION = "/data/data/com.mytutorials.findwordsgame/words.db";


// Check if the database exists before copying
            boolean initialiseDatabase = (new File(DB_DESTINATION)).exists();
            if (initialiseDatabase == false) {

                // Open the .db file in your assets directory
                InputStream is = this.getAssets().open("words.db");

                // Copy the database into the destination
                OutputStream os = new FileOutputStream(DB_DESTINATION);
                byte[] buffer = new byte[1024];
                int length;
                while ((length = is.read(buffer)) > 0){
                    os.write(buffer, 0, length);
                }
                os.flush();

                os.close();
                is.close();
            }
        }catch (Exception e){
            e.printStackTrace();
        }
    }
}





package com.mytutorials.findwordsgame;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Locale;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;

public class MainActivity extends AppCompatActivity {
    ImageView iv1_1, iv1_2, iv1_3, iv1_4, iv1_5, iv1_6, iv1_7, iv1_8;
    ImageView iv2_1, iv2_2, iv2_3, iv2_4, iv2_5, iv2_6, iv2_7, iv2_8;
    ImageView iv3_1, iv3_2, iv3_3, iv3_4, iv3_5, iv3_6, iv3_7, iv3_8;
    ImageView iv4_1, iv4_2, iv4_3, iv4_4, iv4_5, iv4_6, iv4_7, iv4_8;
    ImageView iv5_1, iv5_2, iv5_3, iv5_4, iv5_5, iv5_6, iv5_7, iv5_8;
    ImageView iv6_1, iv6_2, iv6_3, iv6_4, iv6_5, iv6_6, iv6_7, iv6_8;
    ImageView iv7_1, iv7_2, iv7_3, iv7_4, iv7_5, iv7_6, iv7_7, iv7_8;
    ImageView iv8_1, iv8_2, iv8_3, iv8_4, iv8_5, iv8_6, iv8_7, iv8_8;
    ImageView iv9_1, iv9_2, iv9_3, iv9_4, iv9_5, iv9_6, iv9_7, iv9_8;
    ImageView iv10_1, iv10_2, iv10_3, iv10_4, iv10_5, iv10_6, iv10_7, iv10_8;
    ImageView iv11_1, iv11_2, iv11_3, iv11_4, iv11_5, iv11_6, iv11_7, iv11_8;
    ImageView blockImage;
    TextView readyText;
    public SQLiteDatabase database;
    int a, b, c, cc, d, e, f, g, gg, h, i, ii, j, k, l, m, n, o, oo, p, r, s, ss, t, u, uu, vv, y, z, back, back1;
    HashMap<String, Integer> scoreOfAlphabeticalMap = new HashMap<>();
    HashMap<Integer, String> whichLettersChooseMap = new HashMap<>();
    ArrayList<ImageView> colomn1 = new ArrayList<>();
    ArrayList<ImageView> colomn2 = new ArrayList<>();
    ArrayList<ImageView> colomn3 = new ArrayList<>();
    ArrayList<ImageView> colomn4 = new ArrayList<>();
    ArrayList<ImageView> colomn5 = new ArrayList<>();
    ArrayList<ImageView> colomn6 = new ArrayList<>();
    ArrayList<ImageView> colomn7 = new ArrayList<>();
    ArrayList<ImageView> colomn8 = new ArrayList<>();
    ArrayList<Integer> letters = new ArrayList<>();
    ArrayList<String> displayText = new ArrayList<>();
    ArrayList<ImageView> selectedImageViews = new ArrayList<>();
    Handler handler = new Handler();
    int beginFallRowCount = 0;
    ArrayList<Integer> randomsRow1 = new ArrayList<>();
    ArrayList<Integer> randomsRow2 = new ArrayList<>();
    ArrayList<Integer> randomsRow3 = new ArrayList<>();
    Button deleteButton, tickButton;
    Random random = new Random();
    boolean clikedSecondcolomn1[] = new boolean[11];
    boolean clikedSecondcolomn2[] = new boolean[11];
    boolean clikedSecondcolomn3[] = new boolean[11];
    boolean clikedSecondcolomn4[] = new boolean[11];
    boolean clikedSecondcolomn5[] = new boolean[11];
    boolean clikedSecondcolomn6[] = new boolean[11];
    boolean clikedSecondcolomn7[] = new boolean[11];
    boolean clikedSecondcolomn8[] = new boolean[11];
    ImageView heart;
    int life = 3, score = 0;
    TextView textheart, textscore, textDisplay;
    boolean gameOver = false;
    //Delay settings
    int delay = 200;
    int secondDelay = 40;
    int timerd = 1800;
    int timerDelay;
    Timer timer0 = new Timer();
    Timer timer1 = new Timer();
    Timer timer2 = new Timer();
    Timer timer3 = new Timer();
    Timer timer4 = new Timer();
    Timer timer5 = new Timer();
    boolean timer1Started = false;
    boolean timer2Started = false;
    boolean timer3Started = false;
    boolean timer4Started = false;
    boolean timer5Started = false;

    ArrayList<Integer> deleteColomn1Indexes = new ArrayList<>();
    ArrayList<Integer> deleteColomn2Indexes = new ArrayList<>();
    ArrayList<Integer> deleteColomn3Indexes = new ArrayList<>();
    ArrayList<Integer> deleteColomn4Indexes = new ArrayList<>();
    ArrayList<Integer> deleteColomn5Indexes = new ArrayList<>();
    ArrayList<Integer> deleteColomn6Indexes = new ArrayList<>();
    ArrayList<Integer> deleteColomn7Indexes = new ArrayList<>();
    ArrayList<Integer> deleteColomn8Indexes = new ArrayList<>();


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //For DB
        DBHelper dbHelper = new DBHelper(getApplicationContext());


        //all colomn second  cliked false
        Arrays.fill(clikedSecondcolomn1, false);
        Arrays.fill(clikedSecondcolomn2, false);
        Arrays.fill(clikedSecondcolomn3, false);
        Arrays.fill(clikedSecondcolomn4, false);
        Arrays.fill(clikedSecondcolomn5, false);
        Arrays.fill(clikedSecondcolomn6, false);
        Arrays.fill(clikedSecondcolomn7, false);
        Arrays.fill(clikedSecondcolomn8, false);


        // connect textviews,Buttons ect.
        deleteButton = findViewById(R.id.deleteButton);
        tickButton = findViewById(R.id.tickButton);
        blockImage = findViewById(R.id.blockImage);
        readyText = findViewById(R.id.textViewsReady);
        heart = findViewById(R.id.heart);
        textheart = findViewById(R.id.textHeart);
        textscore = findViewById(R.id.textScore);
        textDisplay = findViewById(R.id.textDisplay);
        iv1_1 = findViewById(R.id.iv1_1);
        iv1_2 = findViewById(R.id.iv1_2);
        iv1_3 = findViewById(R.id.iv1_3);
        iv1_4 = findViewById(R.id.iv1_4);
        iv1_5 = findViewById(R.id.iv1_5);
        iv1_6 = findViewById(R.id.iv1_6);
        iv1_7 = findViewById(R.id.iv1_7);
        iv1_8 = findViewById(R.id.iv1_8);

        iv2_1 = findViewById(R.id.iv2_1);
        iv2_2 = findViewById(R.id.iv2_2);
        iv2_3 = findViewById(R.id.iv2_3);
        iv2_4 = findViewById(R.id.iv2_4);
        iv2_5 = findViewById(R.id.iv2_5);
        iv2_6 = findViewById(R.id.iv2_6);
        iv2_7 = findViewById(R.id.iv2_7);
        iv2_8 = findViewById(R.id.iv2_8);

        iv3_1 = findViewById(R.id.iv3_1);
        iv3_2 = findViewById(R.id.iv3_2);
        iv3_3 = findViewById(R.id.iv3_3);
        iv3_4 = findViewById(R.id.iv3_4);
        iv3_5 = findViewById(R.id.iv3_5);
        iv3_6 = findViewById(R.id.iv3_6);
        iv3_7 = findViewById(R.id.iv3_7);
        iv3_8 = findViewById(R.id.iv3_8);

        iv4_1 = findViewById(R.id.iv4_1);
        iv4_2 = findViewById(R.id.iv4_2);
        iv4_3 = findViewById(R.id.iv4_3);
        iv4_4 = findViewById(R.id.iv4_4);
        iv4_5 = findViewById(R.id.iv4_5);
        iv4_6 = findViewById(R.id.iv4_6);
        iv4_7 = findViewById(R.id.iv4_7);
        iv4_8 = findViewById(R.id.iv4_8);

        iv5_1 = findViewById(R.id.iv5_1);
        iv5_2 = findViewById(R.id.iv5_2);
        iv5_3 = findViewById(R.id.iv5_3);
        iv5_4 = findViewById(R.id.iv5_4);
        iv5_5 = findViewById(R.id.iv5_5);
        iv5_6 = findViewById(R.id.iv5_6);
        iv5_7 = findViewById(R.id.iv5_7);
        iv5_8 = findViewById(R.id.iv5_8);

        iv6_1 = findViewById(R.id.iv6_1);
        iv6_2 = findViewById(R.id.iv6_2);
        iv6_3 = findViewById(R.id.iv6_3);
        iv6_4 = findViewById(R.id.iv6_4);
        iv6_5 = findViewById(R.id.iv6_5);
        iv6_6 = findViewById(R.id.iv6_6);
        iv6_7 = findViewById(R.id.iv6_7);
        iv6_8 = findViewById(R.id.iv6_8);

        iv7_1 = findViewById(R.id.iv7_1);
        iv7_2 = findViewById(R.id.iv7_2);
        iv7_3 = findViewById(R.id.iv7_3);
        iv7_4 = findViewById(R.id.iv7_4);
        iv7_5 = findViewById(R.id.iv7_5);
        iv7_6 = findViewById(R.id.iv7_6);
        iv7_7 = findViewById(R.id.iv7_7);
        iv7_8 = findViewById(R.id.iv7_8);

        iv8_1 = findViewById(R.id.iv8_1);
        iv8_2 = findViewById(R.id.iv8_2);
        iv8_3 = findViewById(R.id.iv8_3);
        iv8_4 = findViewById(R.id.iv8_4);
        iv8_5 = findViewById(R.id.iv8_5);
        iv8_6 = findViewById(R.id.iv8_6);
        iv8_7 = findViewById(R.id.iv8_7);
        iv8_8 = findViewById(R.id.iv8_8);


        iv9_1 = findViewById(R.id.iv9_1);
        iv9_2 = findViewById(R.id.iv9_2);
        iv9_3 = findViewById(R.id.iv9_3);
        iv9_4 = findViewById(R.id.iv9_4);
        iv9_5 = findViewById(R.id.iv9_5);
        iv9_6 = findViewById(R.id.iv9_6);
        iv9_7 = findViewById(R.id.iv9_7);
        iv9_8 = findViewById(R.id.iv9_8);

        iv10_1 = findViewById(R.id.iv10_1);
        iv10_2 = findViewById(R.id.iv10_2);
        iv10_3 = findViewById(R.id.iv10_3);
        iv10_4 = findViewById(R.id.iv10_4);
        iv10_5 = findViewById(R.id.iv10_5);
        iv10_6 = findViewById(R.id.iv10_6);
        iv10_7 = findViewById(R.id.iv10_7);
        iv10_8 = findViewById(R.id.iv10_8);

        iv11_1 = findViewById(R.id.iv11_1);
        iv11_2 = findViewById(R.id.iv11_2);
        iv11_3 = findViewById(R.id.iv11_3);
        iv11_4 = findViewById(R.id.iv11_4);
        iv11_5 = findViewById(R.id.iv11_5);
        iv11_6 = findViewById(R.id.iv11_6);
        iv11_7 = findViewById(R.id.iv11_7);
        iv11_8 = findViewById(R.id.iv11_8);


        // images trun a number
        imgToNum();
        // score of alphabe
        scoreOfAlphabeticalMap = scoreOfAlphabetic(scoreOfAlphabeticalMap);
        whichLettersChooseMap = StringLetterOfIntImages(whichLettersChooseMap);
        setColomn();

        letters.add(a);
        letters.add(b);
        letters.add(c);
        letters.add(cc);
        letters.add(d);
        letters.add(e);
        letters.add(f);
        letters.add(g);
        letters.add(gg);
        letters.add(h);
        letters.add(i);
        letters.add(ii);
        letters.add(j);
        letters.add(k);
        letters.add(l);
        letters.add(m);
        letters.add(n);
        letters.add(o);
        letters.add(oo);
        letters.add(p);
        letters.add(r);
        letters.add(s);
        letters.add(ss);
        letters.add(t);
        letters.add(u);
        letters.add(uu);
        letters.add(vv);
        letters.add(y);
        letters.add(z);

        //begining settings
        beginSetVisibility();
        setTagAll();
        setEnabletAll(false);

        //wait for 3 rows fall
        deleteButton.setEnabled(false);
        tickButton.setEnabled(false);
        blockImage.setEnabled(false);
        blockImage.setVisibility(View.VISIBLE);
        readyText.setVisibility(View.VISIBLE);
        tickButton.setVisibility(View.INVISIBLE);
        deleteButton.setVisibility(View.INVISIBLE);
        textheart.setVisibility(View.INVISIBLE);
        textscore.setVisibility(View.INVISIBLE);
        heart.setVisibility(View.INVISIBLE);
        heart.setEnabled(false);
        textDisplay.setVisibility(View.INVISIBLE);
        textDisplay.setEnabled(false);

        //generate number for 3 rows
        generateNumberLetters(randomsRow1);
        generateNumberLetters(randomsRow2);
        generateNumberLetters(randomsRow3);
        //BUTTONS
        deleteButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (!selectedImageViews.isEmpty()) {
                    textDisplay.setText("\n");
                    displayText.clear();
                    for (int i = 0; i < selectedImageViews.size(); i++) {
                        selectedImageViews.get(i).setAlpha(1F);
                        Arrays.fill(clikedSecondcolomn1, false);
                        Arrays.fill(clikedSecondcolomn2, false);
                        Arrays.fill(clikedSecondcolomn3, false);
                        Arrays.fill(clikedSecondcolomn4, false);
                        Arrays.fill(clikedSecondcolomn5, false);
                        Arrays.fill(clikedSecondcolomn6, false);
                        Arrays.fill(clikedSecondcolomn7, false);
                        Arrays.fill(clikedSecondcolomn8, false);
                    }

                    selectedImageViews.clear();
                }
            }
        });
        tickButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                Cursor cursor = dbHelper.fetchData(textDisplay.getText().toString().toLowerCase(Locale.forLanguageTag("tr")).replaceAll("\n", ""));

                System.out.println(textDisplay.getText().toString());
                if (cursor.getCount() > 0)
                {//burada database kontrolü yapılmalı textDisplay.getText().toString() içeriyor mu doğru ise ifin içi yanlış ise else
//canımız skorumuz da hesaplanacak atanacak

                    if (!selectedImageViews.isEmpty()) {
                        textDisplay.setText("\n");
                        for (int i = 0; i < selectedImageViews.size(); i++) {
                            selectedImageViews.get(i).setAlpha(1F);
                            Arrays.fill(clikedSecondcolomn1, false);
                            Arrays.fill(clikedSecondcolomn2, false);
                            Arrays.fill(clikedSecondcolomn3, false);
                            Arrays.fill(clikedSecondcolomn4, false);
                            Arrays.fill(clikedSecondcolomn5, false);
                            Arrays.fill(clikedSecondcolomn6, false);
                            Arrays.fill(clikedSecondcolomn7, false);
                            Arrays.fill(clikedSecondcolomn8, false);
                        }

                        score = scoreCalculate(displayText, score);
                        textscore.setText("SCORE: " + score);
                        displayText.clear();
                        for (int i = 0; i < selectedImageViews.size(); i++) {
                            // selectedImageViews.get(i).setVisibility(View.INVISIBLE);
                            // selectedImageViews.get(i).setTag("x");
                            if (colomn1.indexOf(selectedImageViews.get(i)) != -1) {
                                int indexOfLast = colomn1.indexOf(selectedImageViews.get(i));
                                colomn1.get(indexOfLast).setVisibility(View.INVISIBLE);
                                colomn1.get(indexOfLast).setTag("x");
                                deleteColomn1Indexes.add(indexOfLast);
                                //colomn1=deleteEmptyINColomnBottomToTop(colomn1, indexOfLast);
                            } else if (colomn2.indexOf(selectedImageViews.get(i)) != -1) {
                                int indexOfLast = colomn2.indexOf(selectedImageViews.get(i));
                                colomn2.get(indexOfLast).setVisibility(View.INVISIBLE);
                                colomn2.get(indexOfLast).setTag("x");
                                deleteColomn2Indexes.add(indexOfLast);
                                //colomn2=deleteEmptyINColomnBottomToTop(colomn2, indexOfLast);

                            } else if (colomn3.indexOf(selectedImageViews.get(i)) != -1) {
                                int indexOfLast = colomn3.indexOf(selectedImageViews.get(i));
                                colomn3.get(indexOfLast).setVisibility(View.INVISIBLE);
                                colomn3.get(indexOfLast).setTag("x");
                                deleteColomn3Indexes.add(indexOfLast);
                                //colomn3=deleteEmptyINColomnBottomToTop(colomn3, indexOfLast);

                            } else if (colomn4.indexOf(selectedImageViews.get(i)) != -1) {
                                int indexOfLast = colomn4.indexOf(selectedImageViews.get(i));
                                colomn4.get(indexOfLast).setVisibility(View.INVISIBLE);
                                colomn4.get(indexOfLast).setTag("x");
                                deleteColomn4Indexes.add(indexOfLast);
                                //colomn4=deleteEmptyINColomnBottomToTop(colomn4, indexOfLast);

                            } else if (colomn5.indexOf(selectedImageViews.get(i)) != -1) {
                                int indexOfLast = colomn5.indexOf(selectedImageViews.get(i));
                                colomn5.get(indexOfLast).setVisibility(View.INVISIBLE);
                                colomn5.get(indexOfLast).setTag("x");
                                deleteColomn5Indexes.add(indexOfLast);
                                //colomn5= deleteEmptyINColomnBottomToTop(colomn5, indexOfLast);

                            } else if (colomn6.indexOf(selectedImageViews.get(i)) != -1) {
                                int indexOfLast = colomn6.indexOf(selectedImageViews.get(i));
                                colomn6.get(indexOfLast).setVisibility(View.INVISIBLE);
                                colomn6.get(indexOfLast).setTag("x");
                                deleteColomn6Indexes.add(indexOfLast);
                                // colomn6= deleteEmptyINColomnBottomToTop(colomn6, indexOfLast);

                            } else if (colomn7.indexOf(selectedImageViews.get(i)) != -1) {
                                int indexOfLast = colomn7.indexOf(selectedImageViews.get(i));
                                colomn7.get(indexOfLast).setVisibility(View.INVISIBLE);
                                colomn7.get(indexOfLast).setTag("x");
                                deleteColomn7Indexes.add(indexOfLast);
                                // colomn7= deleteEmptyINColomnBottomToTop(colomn7, indexOfLast);

                            } else if (colomn8.indexOf(selectedImageViews.get(i)) != -1) {
                                int indexOfLast = colomn8.indexOf(selectedImageViews.get(i));
                                colomn8.get(indexOfLast).setVisibility(View.INVISIBLE);
                                colomn8.get(indexOfLast).setTag("x");
                                deleteColomn8Indexes.add(indexOfLast);
                                // colomn8= deleteEmptyINColomnBottomToTop(colomn8, indexOfLast);

                            }


                        }

                        if (!deleteColomn1Indexes.isEmpty()) {
                            Collections.sort(deleteColomn1Indexes);
                            for (int i = 0; i < deleteColomn1Indexes.size(); i++) {
                                colomn1 = deleteEmptyINColomnBottomToTop(colomn1, deleteColomn1Indexes.get(i));
                            }
                            deleteColomn1Indexes.clear();
                        }
                        if (!deleteColomn2Indexes.isEmpty()) {
                            Collections.sort(deleteColomn2Indexes);
                            for (int i = 0; i < deleteColomn2Indexes.size(); i++) {
                                colomn2 = deleteEmptyINColomnBottomToTop(colomn2, deleteColomn2Indexes.get(i));
                            }
                            deleteColomn2Indexes.clear();
                        }
                        if (!deleteColomn3Indexes.isEmpty()) {
                            Collections.sort(deleteColomn3Indexes);
                            for (int i = 0; i < deleteColomn3Indexes.size(); i++) {
                                colomn3 = deleteEmptyINColomnBottomToTop(colomn3, deleteColomn3Indexes.get(i));
                            }
                            deleteColomn3Indexes.clear();
                        }
                        if (!deleteColomn4Indexes.isEmpty()) {
                            Collections.sort(deleteColomn4Indexes);
                            for (int i = 0; i < deleteColomn4Indexes.size(); i++) {
                                colomn4 = deleteEmptyINColomnBottomToTop(colomn4, deleteColomn4Indexes.get(i));
                            }
                            deleteColomn4Indexes.clear();
                        }
                        if (!deleteColomn5Indexes.isEmpty()) {
                            Collections.sort(deleteColomn5Indexes);
                            for (int i = 0; i < deleteColomn5Indexes.size(); i++) {
                                colomn5 = deleteEmptyINColomnBottomToTop(colomn5, deleteColomn5Indexes.get(i));
                            }
                            deleteColomn5Indexes.clear();
                        }

                        if (!deleteColomn6Indexes.isEmpty()) {
                            Collections.sort(deleteColomn6Indexes);
                            for (int i = 0; i < deleteColomn6Indexes.size(); i++) {
                                colomn6 = deleteEmptyINColomnBottomToTop(colomn6, deleteColomn6Indexes.get(i));
                            }
                            deleteColomn6Indexes.clear();
                        }

                        if (!deleteColomn7Indexes.isEmpty()) {
                            Collections.sort(deleteColomn7Indexes);
                            for (int i = 0; i < deleteColomn7Indexes.size(); i++) {
                                colomn7 = deleteEmptyINColomnBottomToTop(colomn7, deleteColomn7Indexes.get(i));
                            }
                            deleteColomn7Indexes.clear();
                        }
                        if (!deleteColomn8Indexes.isEmpty()) {
                            Collections.sort(deleteColomn8Indexes);
                            for (int i = 0; i < deleteColomn8Indexes.size(); i++) {
                                colomn8 = deleteEmptyINColomnBottomToTop(colomn8, deleteColomn8Indexes.get(i));
                            }
                            deleteColomn8Indexes.clear();
                        }


                        handler.postDelayed(new Runnable() {
                            @Override
                            public void run() {
                                colomn1 = deleteEmptyINColomn(colomn1);
                                colomn2 = deleteEmptyINColomn(colomn2);

                                colomn3 = deleteEmptyINColomn(colomn3);
                                colomn4 = deleteEmptyINColomn(colomn4);
                                colomn5 = deleteEmptyINColomn(colomn5);
                                colomn6 = deleteEmptyINColomn(colomn6);
                                colomn7 = deleteEmptyINColomn(colomn7);
                                colomn8 = deleteEmptyINColomn(colomn8);
                            }
                        }, 400);//gecikme süresi senkronizasyonu yapılacak

                        selectedImageViews.clear();

                        //The task for falling periodic with checking score
                        TimerTask task1 = new TimerTask() {
                            @Override
                            public void run() {

                                switch (generateNumberWhichColomn()) {
                                    case 0:
                                        colomn1 = fallImagesViewSetWithPeriod(colomn1, delay, letters.get(generateNumberLetters()), secondDelay);
                                        break;
                                    case 1:
                                        colomn2 = fallImagesViewSetWithPeriod(colomn2, delay, letters.get(generateNumberLetters()), secondDelay);
                                        break;
                                    case 2:
                                        colomn3 = fallImagesViewSetWithPeriod(colomn3, delay, letters.get(generateNumberLetters()), secondDelay);
                                        break;
                                    case 3:
                                        colomn4 = fallImagesViewSetWithPeriod(colomn4, delay, letters.get(generateNumberLetters()), secondDelay);
                                        break;
                                    case 4:
                                        colomn5 = fallImagesViewSetWithPeriod(colomn5, delay, letters.get(generateNumberLetters()), secondDelay);
                                        break;
                                    case 5:
                                        colomn6 = fallImagesViewSetWithPeriod(colomn6, delay, letters.get(generateNumberLetters()), secondDelay);
                                        break;
                                    case 6:
                                        colomn7 = fallImagesViewSetWithPeriod(colomn7, delay, letters.get(generateNumberLetters()), secondDelay);
                                        break;
                                    case 7:
                                        colomn8 = fallImagesViewSetWithPeriod(colomn8, delay, letters.get(generateNumberLetters()), secondDelay);
                                        break;

                                }
                            }

                        };


                        if (score < 100 && timer1Started == false) {
                            timerDelay = 6000;
                            timer1Started = true;
                            timer0.cancel();
                            timer1.schedule(task1, 6000, timerDelay);
                        } else if (score < 200 && score >= 100 && timer2Started == false && timer1Started == true) {
                            timerDelay = 5000;
                            timer2Started = true;
                            timer0.cancel();
                            timer1.cancel();
                            timer2.schedule(task1, 6000, timerDelay);
                        } else if (score < 300 && score >= 200 && timer3Started == false && timer2Started == true && timer1Started == true) {
                            timerDelay = 4000;
                            timer3Started = true;
                            timer0.cancel();
                            timer1.cancel();
                            timer2.cancel();
                            timer3.schedule(task1, 5000, timerDelay);
                        } else if (score < 400 && score >= 300 && timer4Started == false && timer3Started == true && timer2Started == true && timer1Started == true) {
                            timerDelay = 3000;
                            timer4Started = true;
                            timer0.cancel();
                            timer1.cancel();
                            timer2.cancel();
                            timer3.cancel();
                            timer4.schedule(task1, 4000, timerDelay);
                        } else if (score < 500 && score >= 400 && timer5Started == false && timer4Started == true && timer3Started == true && timer2Started == true && timer1Started == true) {
                            timerDelay = 2000;
                            timer5Started = true;
                            timer0.cancel();
                            timer1.cancel();
                            timer2.cancel();
                            timer3.cancel();
                            timer4.cancel();
                            timer5.schedule(task1, 3000, timerDelay);
                        }


                    }
                } else {
                    //can düşecek ,skor hesaplanacak, can sıfıra ulaşırsa satır düşecek ya
                    //tıklanılan şeyler sıfırlanmalı
                    if (!selectedImageViews.isEmpty()) {
                        textDisplay.setText("\n");
                        displayText.clear();
                        for (int i = 0; i < selectedImageViews.size(); i++) {
                            selectedImageViews.get(i).setAlpha(1F);
                            Arrays.fill(clikedSecondcolomn1, false);
                            Arrays.fill(clikedSecondcolomn2, false);
                            Arrays.fill(clikedSecondcolomn3, false);
                            Arrays.fill(clikedSecondcolomn4, false);
                            Arrays.fill(clikedSecondcolomn5, false);
                            Arrays.fill(clikedSecondcolomn6, false);
                            Arrays.fill(clikedSecondcolomn7, false);
                            Arrays.fill(clikedSecondcolomn8, false);
                        }
                        selectedImageViews.clear();
                        if (life != 1) {
                            life--;
                            textheart.setText(String.valueOf(life));
                        } else {
                            life--;
                            if (life == 0) {
                                textheart.setText("3");
                            } else {
                                textheart.setText(String.valueOf(life));
                            }

                        }
                    }

                }

            }
        });


        //fallingImagesViews(colomn3, delay, b, secondDelay);
        beginTimerFalling(randomsRow1, randomsRow2, randomsRow3, delay, secondDelay, timerd);

        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                readyText.setText("GO!");
                //writing tags for check
                /*
                for (int i = colomn1.size() - 1; i >= 8; i--) {
                   System.out.println((String) colomn1.get(i).getTag());
                    System.out.println((String) colomn2.get(i).getTag());
                    System.out.println((String) colomn3.get(i).getTag());

                    System.out.println((String) colomn4.get(i).getTag());
                    System.out.println((String) colomn5.get(i).getTag());
                    System.out.println((String) colomn6.get(i).getTag());
                    System.out.println((String) colomn7.get(i).getTag());
                    System.out.println((String) colomn8.get(i).getTag());

                }*/
                readyText.setVisibility(View.GONE);
                blockImage.setVisibility(View.GONE);
                setEnabletAll(true);
                deleteButton.setEnabled(true);
                deleteButton.setVisibility(View.VISIBLE);
                tickButton.setEnabled(true);
                tickButton.setVisibility(View.VISIBLE);
                textheart.setVisibility(View.VISIBLE);
                textscore.setVisibility(View.VISIBLE);
                heart.setVisibility(View.VISIBLE);
                textDisplay.setVisibility(View.VISIBLE);

            }
        }, 3 * timerd + 100);


        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                colomn1.get(10).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //  System.out.println(clikedSecondcolomn1[10]);
                        if (clikedSecondcolomn1[10] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn1.get(10).getTag().toString());
                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn1.get(10).setAlpha(0.3F);
                            clikedSecondcolomn1[10] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn1.get(10));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(10),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn1.get(10).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn1.get(10));


                            clikedSecondcolomn1[10] = false;
                            colomn1.get(10).setAlpha(1F);
                        }
                    }
                });

                colomn1.get(9).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //  System.out.println(clikedSecondcolomn1[10]);
                        if (clikedSecondcolomn1[9] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn1.get(9).getTag().toString());
                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn1.get(9).setAlpha(0.3F);
                            clikedSecondcolomn1[9] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn1.get(9));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(10),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn1.get(9).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn1.get(9));


                            clikedSecondcolomn1[9] = false;
                            colomn1.get(9).setAlpha(1F);
                        }
                    }
                });

                colomn1.get(8).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //  System.out.println(clikedSecondcolomn1[8]);
                        if (clikedSecondcolomn1[8] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn1.get(8).getTag().toString());
                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn1.get(8).setAlpha(0.3F);
                            clikedSecondcolomn1[8] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn1.get(8));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(8),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn1.get(8).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn1.get(8));


                            clikedSecondcolomn1[8] = false;
                            colomn1.get(8).setAlpha(1F);
                        }
                    }
                });

                colomn1.get(7).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //  System.out.println(clikedSecondcolomn1[7]);
                        if (clikedSecondcolomn1[7] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn1.get(7).getTag().toString());
                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn1.get(7).setAlpha(0.3F);
                            clikedSecondcolomn1[7] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn1.get(7));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(7),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn1.get(7).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn1.get(7));


                            clikedSecondcolomn1[7] = false;
                            colomn1.get(7).setAlpha(1F);
                        }
                    }
                });

                colomn1.get(6).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //  System.out.println(clikedSecondcolomn1[6]);
                        if (clikedSecondcolomn1[6] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn1.get(6).getTag().toString());
                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn1.get(6).setAlpha(0.3F);
                            clikedSecondcolomn1[6] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn1.get(6));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(6),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn1.get(6).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn1.get(6));


                            clikedSecondcolomn1[6] = false;
                            colomn1.get(6).setAlpha(1F);
                        }
                    }
                });

                colomn1.get(5).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //  System.out.println(clikedSecondcolomn1[5]);
                        if (clikedSecondcolomn1[5] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn1.get(5).getTag().toString());
                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn1.get(5).setAlpha(0.3F);
                            clikedSecondcolomn1[5] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn1.get(5));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(5),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn1.get(5).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn1.get(5));


                            clikedSecondcolomn1[5] = false;
                            colomn1.get(5).setAlpha(1F);
                        }
                    }
                });

                colomn1.get(4).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //  System.out.println(clikedSecondcolomn1[4]);
                        if (clikedSecondcolomn1[4] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn1.get(4).getTag().toString());
                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn1.get(4).setAlpha(0.3F);
                            clikedSecondcolomn1[4] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn1.get(4));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(4),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn1.get(4).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn1.get(4));


                            clikedSecondcolomn1[4] = false;
                            colomn1.get(4).setAlpha(1F);
                        }
                    }
                });

                colomn1.get(3).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //  System.out.println(clikedSecondcolomn1[3]);
                        if (clikedSecondcolomn1[3] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn1.get(3).getTag().toString());
                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn1.get(3).setAlpha(0.3F);
                            clikedSecondcolomn1[3] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn1.get(3));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(3),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn1.get(3).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn1.get(3));


                            clikedSecondcolomn1[3] = false;
                            colomn1.get(3).setAlpha(1F);
                        }
                    }
                });

                colomn1.get(2).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //  System.out.println(clikedSecondcolomn1[2]);
                        if (clikedSecondcolomn1[2] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn1.get(2).getTag().toString());
                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn1.get(2).setAlpha(0.3F);
                            clikedSecondcolomn1[2] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn1.get(2));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(2),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn1.get(2).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn1.get(2));


                            clikedSecondcolomn1[2] = false;
                            colomn1.get(2).setAlpha(1F);
                        }
                    }
                });

                colomn1.get(1).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //  System.out.println(clikedSecondcolomn1[1]);
                        if (clikedSecondcolomn1[1] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn1.get(1).getTag().toString());
                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn1.get(1).setAlpha(0.3F);
                            clikedSecondcolomn1[1] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn1.get(1));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(1),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn1.get(1).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn1.get(1));


                            clikedSecondcolomn1[1] = false;
                            colomn1.get(1).setAlpha(1F);
                        }
                    }
                });


                colomn2.get(10).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //    System.out.println(clikedSecondcolomn1[10]);
                        if (clikedSecondcolomn2[10] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn2.get(10).getTag().toString());
                            //  int whichColomn = 2;
                            //  int whichRow = 10;
                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn2.get(10).setAlpha(0.3F);
                            clikedSecondcolomn2[10] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn2.get(10));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(10),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn2.get(10).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn2.get(10));

                            clikedSecondcolomn2[10] = false;
                            colomn2.get(10).setAlpha(1F);
                        }
                    }
                });

                colomn2.get(9).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //    System.out.println(clikedSecondcolomn1[9]);
                        if (clikedSecondcolomn2[9] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn2.get(9).getTag().toString());

                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn2.get(9).setAlpha(0.3F);
                            clikedSecondcolomn2[9] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn2.get(9));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(9),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn2.get(9).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn2.get(9));

                            clikedSecondcolomn2[9] = false;
                            colomn2.get(9).setAlpha(1F);
                        }
                    }
                });

                colomn2.get(8).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //    System.out.println(clikedSecondcolomn1[8]);
                        if (clikedSecondcolomn2[8] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn2.get(8).getTag().toString());

                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn2.get(8).setAlpha(0.3F);
                            clikedSecondcolomn2[8] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn2.get(8));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(8),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn2.get(8).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn2.get(8));

                            clikedSecondcolomn2[8] = false;
                            colomn2.get(8).setAlpha(1F);
                        }
                    }
                });

                colomn2.get(7).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //    System.out.println(clikedSecondcolomn1[7]);
                        if (clikedSecondcolomn2[7] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn2.get(7).getTag().toString());

                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn2.get(7).setAlpha(0.3F);
                            clikedSecondcolomn2[7] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn2.get(7));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(7),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn2.get(7).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn2.get(7));

                            clikedSecondcolomn2[7] = false;
                            colomn2.get(7).setAlpha(1F);
                        }
                    }
                });

                colomn2.get(6).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //    System.out.println(clikedSecondcolomn1[6]);
                        if (clikedSecondcolomn2[6] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn2.get(6).getTag().toString());

                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn2.get(6).setAlpha(0.3F);
                            clikedSecondcolomn2[6] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn2.get(6));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(6),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn2.get(6).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn2.get(6));

                            clikedSecondcolomn2[6] = false;
                            colomn2.get(6).setAlpha(1F);
                        }
                    }
                });

                colomn2.get(5).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //    System.out.println(clikedSecondcolomn1[5]);
                        if (clikedSecondcolomn2[5] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn2.get(5).getTag().toString());

                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn2.get(5).setAlpha(0.3F);
                            clikedSecondcolomn2[5] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn2.get(5));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(5),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn2.get(5).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn2.get(5));

                            clikedSecondcolomn2[5] = false;
                            colomn2.get(5).setAlpha(1F);
                        }
                    }
                });

                colomn2.get(4).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //    System.out.println(clikedSecondcolomn1[4]);
                        if (clikedSecondcolomn2[4] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn2.get(4).getTag().toString());

                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn2.get(4).setAlpha(0.3F);
                            clikedSecondcolomn2[4] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn2.get(4));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(4),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn2.get(4).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn2.get(4));

                            clikedSecondcolomn2[4] = false;
                            colomn2.get(4).setAlpha(1F);
                        }
                    }
                });

                colomn2.get(3).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //    System.out.println(clikedSecondcolomn1[3]);
                        if (clikedSecondcolomn2[3] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn2.get(3).getTag().toString());

                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn2.get(3).setAlpha(0.3F);
                            clikedSecondcolomn2[3] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn2.get(3));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(3),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn2.get(3).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn2.get(3));

                            clikedSecondcolomn2[3] = false;
                            colomn2.get(3).setAlpha(1F);
                        }
                    }
                });

                colomn2.get(2).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //    System.out.println(clikedSecondcolomn1[2]);
                        if (clikedSecondcolomn2[2] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn2.get(2).getTag().toString());

                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn2.get(2).setAlpha(0.3F);
                            clikedSecondcolomn2[2] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn2.get(2));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(2),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn2.get(2).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn2.get(2));

                            clikedSecondcolomn2[2] = false;
                            colomn2.get(2).setAlpha(1F);
                        }
                    }
                });

                colomn2.get(1).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //    System.out.println(clikedSecondcolomn1[1]);
                        if (clikedSecondcolomn2[1] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn2.get(1).getTag().toString());

                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn2.get(1).setAlpha(0.3F);
                            clikedSecondcolomn2[1] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn2.get(1));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(1),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn2.get(1).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn2.get(1));

                            clikedSecondcolomn2[1] = false;
                            colomn2.get(1).setAlpha(1F);
                        }
                    }
                });


                colomn3.get(10).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        //    System.out.println(clikedSecondcolomn1[3]);
                        if (clikedSecondcolomn3[10] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn3.get(10).getTag().toString());

                            // System.out.println(  whichLettersChooseMap.get(whichLettersClicked));
                            //textviewde göster veya arraylistine atılacak
                            colomn3.get(10).setAlpha(0.3F);
                            clikedSecondcolomn3[10] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn3.get(10));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn1.get(3),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn3.get(10).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn3.get(10));

                            clikedSecondcolomn3[10] = false;
                            colomn3.get(10).setAlpha(1F);
                        }
                    }
                });

                colomn3.get(9).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn3[9] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn3.get(9).getTag().toString());

                            colomn3.get(9).setAlpha(0.3F);
                            clikedSecondcolomn3[9] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn3.get(9));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn3.get(9).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn3.get(9));

                            clikedSecondcolomn3[9] = false;
                            colomn3.get(9).setAlpha(1F);
                        }
                    }
                });

                colomn3.get(8).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn3[8] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn3.get(8).getTag().toString());

                            colomn3.get(8).setAlpha(0.3F);
                            clikedSecondcolomn3[8] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn3.get(8));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn3.get(8).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn3.get(8));

                            clikedSecondcolomn3[8] = false;
                            colomn3.get(8).setAlpha(1F);
                        }
                    }
                });

                colomn3.get(7).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn3[7] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn3.get(7).getTag().toString());

                            colomn3.get(7).setAlpha(0.3F);
                            clikedSecondcolomn3[7] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn3.get(7));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn3.get(7).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn3.get(7));

                            clikedSecondcolomn3[7] = false;
                            colomn3.get(7).setAlpha(1F);
                        }
                    }
                });

                colomn3.get(6).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn3[6] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn3.get(6).getTag().toString());

                            colomn3.get(6).setAlpha(0.3F);
                            clikedSecondcolomn3[6] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn3.get(6));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn3.get(6).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn3.get(6));

                            clikedSecondcolomn3[6] = false;
                            colomn3.get(6).setAlpha(1F);
                        }
                    }
                });

                colomn3.get(5).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn3[5] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn3.get(5).getTag().toString());

                            colomn3.get(5).setAlpha(0.3F);
                            clikedSecondcolomn3[5] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn3.get(5));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn3.get(5).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn3.get(5));

                            clikedSecondcolomn3[5] = false;
                            colomn3.get(5).setAlpha(1F);
                        }
                    }
                });

                colomn3.get(4).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn3[4] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn3.get(4).getTag().toString());

                            colomn3.get(4).setAlpha(0.3F);
                            clikedSecondcolomn3[4] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn3.get(4));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn3.get(4).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn3.get(4));

                            clikedSecondcolomn3[4] = false;
                            colomn3.get(4).setAlpha(1F);
                        }
                    }
                });

                colomn3.get(3).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn3[3] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn3.get(3).getTag().toString());

                            colomn3.get(3).setAlpha(0.3F);
                            clikedSecondcolomn3[3] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn3.get(3));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn3.get(3).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn3.get(3));

                            clikedSecondcolomn3[3] = false;
                            colomn3.get(3).setAlpha(1F);
                        }
                    }
                });

                colomn3.get(2).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn3[2] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn3.get(2).getTag().toString());

                            colomn3.get(2).setAlpha(0.3F);
                            clikedSecondcolomn3[2] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn3.get(2));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn3.get(2),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn3.get(2).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn3.get(2));


                            clikedSecondcolomn3[2] = false;
                            colomn3.get(2).setAlpha(1F);
                        }
                    }
                });

                colomn3.get(1).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn3[1] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn3.get(1).getTag().toString());

                            colomn3.get(1).setAlpha(0.3F);
                            clikedSecondcolomn3[1] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn3.get(1));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn3.get(1),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn3.get(1).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn3.get(1));


                            clikedSecondcolomn3[1] = false;
                            colomn3.get(1).setAlpha(1F);
                        }
                    }
                });


                colomn4.get(10).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn4[10] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn4.get(10).getTag().toString());


                            colomn4.get(10).setAlpha(0.3F);
                            clikedSecondcolomn4[10] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn4.get(10));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn4.get(10).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn4.get(10));

                            clikedSecondcolomn4[10] = false;
                            colomn4.get(10).setAlpha(1F);
                        }
                    }
                });

                colomn4.get(9).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn4[9] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn4.get(9).getTag().toString());

                            colomn4.get(9).setAlpha(0.3F);
                            clikedSecondcolomn4[9] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn4.get(9));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn4.get(9).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn4.get(9));

                            clikedSecondcolomn4[9] = false;
                            colomn4.get(9).setAlpha(1F);
                        }
                    }
                });

                colomn4.get(8).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn4[8] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn4.get(8).getTag().toString());

                            colomn4.get(8).setAlpha(0.3F);
                            clikedSecondcolomn4[8] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn4.get(8));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn4.get(8).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn4.get(8));

                            clikedSecondcolomn4[8] = false;
                            colomn4.get(8).setAlpha(1F);
                        }
                    }
                });

                colomn4.get(7).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn4[7] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn4.get(7).getTag().toString());

                            colomn4.get(7).setAlpha(0.3F);
                            clikedSecondcolomn4[7] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn4.get(7));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn4.get(7).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn4.get(7));

                            clikedSecondcolomn4[7] = false;
                            colomn4.get(7).setAlpha(1F);
                        }
                    }
                });

                colomn4.get(6).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn4[6] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn4.get(6).getTag().toString());

                            colomn4.get(6).setAlpha(0.3F);
                            clikedSecondcolomn4[6] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn4.get(6));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn4.get(6).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn4.get(6));

                            clikedSecondcolomn4[6] = false;
                            colomn4.get(6).setAlpha(1F);
                        }
                    }
                });

                colomn4.get(5).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn4[5] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn4.get(5).getTag().toString());

                            colomn4.get(5).setAlpha(0.3F);
                            clikedSecondcolomn4[5] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn4.get(5));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn4.get(5).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn4.get(5));

                            clikedSecondcolomn4[5] = false;
                            colomn4.get(5).setAlpha(1F);
                        }
                    }
                });

                colomn4.get(4).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn4[4] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn4.get(4).getTag().toString());

                            colomn4.get(4).setAlpha(0.3F);
                            clikedSecondcolomn4[4] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn4.get(4));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn4.get(4).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn4.get(4));

                            clikedSecondcolomn4[4] = false;
                            colomn4.get(4).setAlpha(1F);
                        }
                    }
                });

                colomn4.get(3).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn4[3] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn4.get(3).getTag().toString());

                            colomn4.get(3).setAlpha(0.3F);
                            clikedSecondcolomn4[3] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn4.get(3));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn4.get(3).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn4.get(3));

                            clikedSecondcolomn4[3] = false;
                            colomn4.get(3).setAlpha(1F);
                        }
                    }
                });

                colomn4.get(2).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn4[2] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn4.get(2).getTag().toString());

                            colomn4.get(2).setAlpha(0.3F);
                            clikedSecondcolomn4[2] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn4.get(2));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn4.get(2),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn4.get(2).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn4.get(2));


                            clikedSecondcolomn4[2] = false;
                            colomn4.get(2).setAlpha(1F);
                        }
                    }
                });

                colomn4.get(1).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn4[1] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn4.get(1).getTag().toString());

                            colomn4.get(1).setAlpha(0.3F);
                            clikedSecondcolomn4[1] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn4.get(1));
                            //burada bir fonksiyon olmalı tıklanılan resmi ve nereye tıklanıldığını göndereceğiz
                            //çünkü onaylama butonuna bastığında doğru ise silecek resmi ve invisible yapıcak
                            //  function(colomn4.get(1),whichColomn,whichRow)
                        } else {
                            //textviewden silveya arraylistinden  silinicek
                            int whichLettersClicked = Integer.parseInt(colomn4.get(1).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn4.get(1));


                            clikedSecondcolomn4[1] = false;
                            colomn4.get(1).setAlpha(1F);
                        }
                    }
                });


                colomn5.get(10).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn5[10] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn5.get(10).getTag().toString());


                            colomn5.get(10).setAlpha(0.3F);
                            clikedSecondcolomn5[10] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn5.get(10));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn5.get(10).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn5.get(10));

                            clikedSecondcolomn5[10] = false;
                            colomn5.get(10).setAlpha(1F);
                        }
                    }
                });

                colomn5.get(9).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn5[9] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn5.get(9).getTag().toString());

                            colomn5.get(9).setAlpha(0.3F);
                            clikedSecondcolomn5[9] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn5.get(9));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn5.get(9).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn5.get(9));

                            clikedSecondcolomn5[9] = false;
                            colomn5.get(9).setAlpha(1F);
                        }
                    }
                });

                colomn5.get(8).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn5[8] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn5.get(8).getTag().toString());

                            colomn5.get(8).setAlpha(0.3F);
                            clikedSecondcolomn5[8] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn5.get(8));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn5.get(8).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn5.get(8));

                            clikedSecondcolomn5[8] = false;
                            colomn5.get(8).setAlpha(1F);
                        }
                    }
                });

                colomn5.get(7).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn5[7] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn5.get(7).getTag().toString());

                            colomn5.get(7).setAlpha(0.3F);
                            clikedSecondcolomn5[7] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn5.get(7));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn5.get(7).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn5.get(7));

                            clikedSecondcolomn5[7] = false;
                            colomn5.get(7).setAlpha(1F);
                        }
                    }
                });

                colomn5.get(6).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn5[6] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn5.get(6).getTag().toString());

                            colomn5.get(6).setAlpha(0.3F);
                            clikedSecondcolomn5[6] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn5.get(6));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn5.get(6).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn5.get(6));

                            clikedSecondcolomn5[6] = false;
                            colomn5.get(6).setAlpha(1F);
                        }
                    }
                });

                colomn5.get(5).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn5[5] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn5.get(5).getTag().toString());

                            colomn5.get(5).setAlpha(0.3F);
                            clikedSecondcolomn5[5] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn5.get(5));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn5.get(5).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn5.get(5));

                            clikedSecondcolomn5[5] = false;
                            colomn5.get(5).setAlpha(1F);
                        }
                    }
                });

                colomn5.get(4).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn5[4] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn5.get(4).getTag().toString());

                            colomn5.get(4).setAlpha(0.3F);
                            clikedSecondcolomn5[4] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn5.get(4));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn5.get(4).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn5.get(4));

                            clikedSecondcolomn5[4] = false;
                            colomn5.get(4).setAlpha(1F);
                        }
                    }
                });

                colomn5.get(3).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn5[3] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn5.get(3).getTag().toString());

                            colomn5.get(3).setAlpha(0.3F);
                            clikedSecondcolomn5[3] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn5.get(3));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn5.get(3).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn5.get(3));

                            clikedSecondcolomn5[3] = false;
                            colomn5.get(3).setAlpha(1F);
                        }
                    }
                });

                colomn5.get(2).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn5[2] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn5.get(2).getTag().toString());

                            colomn5.get(2).setAlpha(0.3F);
                            clikedSecondcolomn5[2] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn5.get(2));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn5.get(2).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn5.get(2));


                            clikedSecondcolomn5[2] = false;
                            colomn5.get(2).setAlpha(1F);
                        }
                    }
                });

                colomn5.get(1).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn5[1] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn5.get(1).getTag().toString());

                            colomn5.get(1).setAlpha(0.3F);
                            clikedSecondcolomn5[1] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn5.get(1));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn5.get(1).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn5.get(1));


                            clikedSecondcolomn5[1] = false;
                            colomn5.get(1).setAlpha(1F);
                        }
                    }
                });


                colomn6.get(10).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn6[10] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn6.get(10).getTag().toString());


                            colomn6.get(10).setAlpha(0.3F);
                            clikedSecondcolomn6[10] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn6.get(10));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn6.get(10).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn6.get(10));

                            clikedSecondcolomn6[10] = false;
                            colomn6.get(10).setAlpha(1F);
                        }
                    }
                });

                colomn6.get(9).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn6[9] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn6.get(9).getTag().toString());

                            colomn6.get(9).setAlpha(0.3F);
                            clikedSecondcolomn6[9] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn6.get(9));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn6.get(9).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn6.get(9));

                            clikedSecondcolomn6[9] = false;
                            colomn6.get(9).setAlpha(1F);
                        }
                    }
                });

                colomn6.get(8).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn6[8] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn6.get(8).getTag().toString());

                            colomn6.get(8).setAlpha(0.3F);
                            clikedSecondcolomn6[8] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn6.get(8));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn6.get(8).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn6.get(8));

                            clikedSecondcolomn6[8] = false;
                            colomn6.get(8).setAlpha(1F);
                        }
                    }
                });

                colomn6.get(7).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn6[7] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn6.get(7).getTag().toString());

                            colomn6.get(7).setAlpha(0.3F);
                            clikedSecondcolomn6[7] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn6.get(7));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn6.get(7).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn6.get(7));

                            clikedSecondcolomn6[7] = false;
                            colomn6.get(7).setAlpha(1F);
                        }
                    }
                });

                colomn6.get(6).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn6[6] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn6.get(6).getTag().toString());

                            colomn6.get(6).setAlpha(0.3F);
                            clikedSecondcolomn6[6] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn6.get(6));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn6.get(6).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn6.get(6));

                            clikedSecondcolomn6[6] = false;
                            colomn6.get(6).setAlpha(1F);
                        }
                    }
                });

                colomn6.get(5).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn6[5] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn6.get(5).getTag().toString());

                            colomn6.get(5).setAlpha(0.3F);
                            clikedSecondcolomn6[5] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn6.get(5));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn6.get(5).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn6.get(5));

                            clikedSecondcolomn6[5] = false;
                            colomn6.get(5).setAlpha(1F);
                        }
                    }
                });

                colomn6.get(4).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn6[4] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn6.get(4).getTag().toString());

                            colomn6.get(4).setAlpha(0.3F);
                            clikedSecondcolomn6[4] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn6.get(4));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn6.get(4).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn6.get(4));

                            clikedSecondcolomn6[4] = false;
                            colomn6.get(4).setAlpha(1F);
                        }
                    }
                });

                colomn6.get(3).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn6[3] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn6.get(3).getTag().toString());

                            colomn6.get(3).setAlpha(0.3F);
                            clikedSecondcolomn6[3] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn6.get(3));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn6.get(3).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn6.get(3));

                            clikedSecondcolomn6[3] = false;
                            colomn6.get(3).setAlpha(1F);
                        }
                    }
                });

                colomn6.get(2).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn6[2] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn6.get(2).getTag().toString());

                            colomn6.get(2).setAlpha(0.3F);
                            clikedSecondcolomn6[2] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn6.get(2));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn6.get(2).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn6.get(2));


                            clikedSecondcolomn6[2] = false;
                            colomn6.get(2).setAlpha(1F);
                        }
                    }
                });

                colomn6.get(1).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn6[1] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn6.get(1).getTag().toString());

                            colomn6.get(1).setAlpha(0.3F);
                            clikedSecondcolomn6[1] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn6.get(1));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn6.get(1).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn6.get(1));


                            clikedSecondcolomn6[1] = false;
                            colomn6.get(1).setAlpha(1F);
                        }
                    }
                });


                colomn7.get(10).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn7[10] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn7.get(10).getTag().toString());


                            colomn7.get(10).setAlpha(0.3F);
                            clikedSecondcolomn7[10] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn7.get(10));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn7.get(10).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn7.get(10));

                            clikedSecondcolomn7[10] = false;
                            colomn7.get(10).setAlpha(1F);
                        }
                    }
                });

                colomn7.get(9).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn7[9] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn7.get(9).getTag().toString());

                            colomn7.get(9).setAlpha(0.3F);
                            clikedSecondcolomn7[9] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn7.get(9));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn7.get(9).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn7.get(9));

                            clikedSecondcolomn7[9] = false;
                            colomn7.get(9).setAlpha(1F);
                        }
                    }
                });

                colomn7.get(8).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn7[8] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn7.get(8).getTag().toString());

                            colomn7.get(8).setAlpha(0.3F);
                            clikedSecondcolomn7[8] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn7.get(8));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn7.get(8).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn7.get(8));

                            clikedSecondcolomn7[8] = false;
                            colomn7.get(8).setAlpha(1F);
                        }
                    }
                });

                colomn7.get(7).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn7[7] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn7.get(7).getTag().toString());

                            colomn7.get(7).setAlpha(0.3F);
                            clikedSecondcolomn7[7] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn7.get(7));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn7.get(7).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn7.get(7));

                            clikedSecondcolomn7[7] = false;
                            colomn7.get(7).setAlpha(1F);
                        }
                    }
                });

                colomn7.get(6).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn7[6] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn7.get(6).getTag().toString());

                            colomn7.get(6).setAlpha(0.3F);
                            clikedSecondcolomn7[6] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn7.get(6));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn7.get(6).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn7.get(6));

                            clikedSecondcolomn7[6] = false;
                            colomn7.get(6).setAlpha(1F);
                        }
                    }
                });

                colomn7.get(5).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn7[5] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn7.get(5).getTag().toString());

                            colomn7.get(5).setAlpha(0.3F);
                            clikedSecondcolomn7[5] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn7.get(5));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn7.get(5).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn7.get(5));

                            clikedSecondcolomn7[5] = false;
                            colomn7.get(5).setAlpha(1F);
                        }
                    }
                });

                colomn7.get(4).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn7[4] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn7.get(4).getTag().toString());

                            colomn7.get(4).setAlpha(0.3F);
                            clikedSecondcolomn7[4] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn7.get(4));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn7.get(4).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn7.get(4));

                            clikedSecondcolomn7[4] = false;
                            colomn7.get(4).setAlpha(1F);
                        }
                    }
                });

                colomn7.get(3).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn7[3] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn7.get(3).getTag().toString());

                            colomn7.get(3).setAlpha(0.3F);
                            clikedSecondcolomn7[3] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn7.get(3));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn7.get(3).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn7.get(3));

                            clikedSecondcolomn7[3] = false;
                            colomn7.get(3).setAlpha(1F);
                        }
                    }
                });

                colomn7.get(2).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn7[2] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn7.get(2).getTag().toString());

                            colomn7.get(2).setAlpha(0.3F);
                            clikedSecondcolomn7[2] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn7.get(2));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn7.get(2).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn7.get(2));


                            clikedSecondcolomn7[2] = false;
                            colomn7.get(2).setAlpha(1F);
                        }
                    }
                });

                colomn7.get(1).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn7[1] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn7.get(1).getTag().toString());

                            colomn7.get(1).setAlpha(0.3F);
                            clikedSecondcolomn7[1] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn7.get(1));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn7.get(1).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn7.get(1));


                            clikedSecondcolomn7[1] = false;
                            colomn7.get(1).setAlpha(1F);
                        }
                    }
                });


                colomn8.get(10).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn8[10] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn8.get(10).getTag().toString());


                            colomn8.get(10).setAlpha(0.3F);
                            clikedSecondcolomn8[10] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn8.get(10));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn8.get(10).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn8.get(10));

                            clikedSecondcolomn8[10] = false;
                            colomn8.get(10).setAlpha(1F);
                        }
                    }
                });

                colomn8.get(9).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn8[9] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn8.get(9).getTag().toString());

                            colomn8.get(9).setAlpha(0.3F);
                            clikedSecondcolomn8[9] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn8.get(9));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn8.get(9).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn8.get(9));

                            clikedSecondcolomn8[9] = false;
                            colomn8.get(9).setAlpha(1F);
                        }
                    }
                });

                colomn8.get(8).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn8[8] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn8.get(8).getTag().toString());

                            colomn8.get(8).setAlpha(0.3F);
                            clikedSecondcolomn8[8] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn8.get(8));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn8.get(8).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn8.get(8));

                            clikedSecondcolomn8[8] = false;
                            colomn8.get(8).setAlpha(1F);
                        }
                    }
                });

                colomn8.get(7).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn8[7] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn8.get(7).getTag().toString());

                            colomn8.get(7).setAlpha(0.3F);
                            clikedSecondcolomn8[7] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn8.get(7));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn8.get(7).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn8.get(7));

                            clikedSecondcolomn8[7] = false;
                            colomn8.get(7).setAlpha(1F);
                        }
                    }
                });

                colomn8.get(6).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn8[6] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn8.get(6).getTag().toString());

                            colomn8.get(6).setAlpha(0.3F);
                            clikedSecondcolomn8[6] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn8.get(6));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn8.get(6).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn8.get(6));

                            clikedSecondcolomn8[6] = false;
                            colomn8.get(6).setAlpha(1F);
                        }
                    }
                });

                colomn8.get(5).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn8[5] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn8.get(5).getTag().toString());

                            colomn8.get(5).setAlpha(0.3F);
                            clikedSecondcolomn8[5] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn8.get(5));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn8.get(5).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn8.get(5));

                            clikedSecondcolomn8[5] = false;
                            colomn8.get(5).setAlpha(1F);
                        }
                    }
                });

                colomn8.get(4).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn8[4] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn8.get(4).getTag().toString());

                            colomn8.get(4).setAlpha(0.3F);
                            clikedSecondcolomn8[4] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn8.get(4));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn8.get(4).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn8.get(4));

                            clikedSecondcolomn8[4] = false;
                            colomn8.get(4).setAlpha(1F);
                        }
                    }
                });

                colomn8.get(3).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (clikedSecondcolomn8[3] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn8.get(3).getTag().toString());

                            colomn8.get(3).setAlpha(0.3F);
                            clikedSecondcolomn8[3] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn8.get(3));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn8.get(3).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn8.get(3));

                            clikedSecondcolomn8[3] = false;
                            colomn8.get(3).setAlpha(1F);
                        }
                    }
                });

                colomn8.get(2).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn8[2] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn8.get(2).getTag().toString());

                            colomn8.get(2).setAlpha(0.3F);
                            clikedSecondcolomn8[2] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn8.get(2));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn8.get(2).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn8.get(2));


                            clikedSecondcolomn8[2] = false;
                            colomn8.get(2).setAlpha(1F);
                        }
                    }
                });

                colomn8.get(1).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        if (clikedSecondcolomn8[1] == false) {
                            int whichLettersClicked = Integer.parseInt(colomn8.get(1).getTag().toString());

                            colomn8.get(1).setAlpha(0.3F);
                            clikedSecondcolomn8[1] = true;
                            displayText.add(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            textDisplay.setText("\n");
                            for (int i = 0; i < displayText.size(); i++) {
                                textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                            }
                            selectedImageViews.add(colomn8.get(1));

                        } else {

                            int whichLettersClicked = Integer.parseInt(colomn8.get(1).getTag().toString());
                            int lastIndex = displayText.lastIndexOf(whichLettersChooseMap.get(whichLettersClicked).toString().toUpperCase(Locale.forLanguageTag("tr")));
                            displayText.remove(lastIndex);
                            if (!displayText.isEmpty()) {
                                textDisplay.setText("\n");
                                for (int i = 0; i < displayText.size(); i++) {
                                    textDisplay.setText(textDisplay.getText().toString() + displayText.get(i));
                                }
                            } else textDisplay.setText("\n");

                            selectedImageViews.remove(colomn8.get(1));


                            clikedSecondcolomn8[1] = false;
                            colomn8.get(1).setAlpha(1F);
                        }
                    }
                });


            }
        }, 3 * timerd + 200);


        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                TimerTask task1 = new TimerTask() {
                    @Override
                    public void run() {
                        switch (generateNumberWhichColomn()) {
                            case 0:
                                colomn1 = fallImagesViewSetWithPeriod(colomn1, delay, letters.get(generateNumberLetters()), secondDelay);
                                break;
                            case 1:
                                colomn2 = fallImagesViewSetWithPeriod(colomn2, delay, letters.get(generateNumberLetters()), secondDelay);
                                break;
                            case 2:
                                colomn3 = fallImagesViewSetWithPeriod(colomn3, delay, letters.get(generateNumberLetters()), secondDelay);
                                break;
                            case 3:
                                colomn4 = fallImagesViewSetWithPeriod(colomn4, delay, letters.get(generateNumberLetters()), secondDelay);
                                break;
                            case 4:
                                colomn5 = fallImagesViewSetWithPeriod(colomn5, delay, letters.get(generateNumberLetters()), secondDelay);
                                break;
                            case 5:
                                colomn6 = fallImagesViewSetWithPeriod(colomn6, delay, letters.get(generateNumberLetters()), secondDelay);
                                break;
                            case 6:
                                colomn7 = fallImagesViewSetWithPeriod(colomn7, delay, letters.get(generateNumberLetters()), secondDelay);
                                break;
                            case 7:
                                colomn8 = fallImagesViewSetWithPeriod(colomn8, delay, letters.get(generateNumberLetters()), secondDelay);
                                break;
                        }
                    }
                };
                timer0.schedule(task1, 0, 6000);
            }
        }, 3 * timerd + 300);


        //  beginTimerFalling(colomn3, delay, c, secondDelay, timerd);
       /* for (int i = 0; i < 3; i++) {
            beginTimerFalling( colomn3,delay,c, secondDelay, timerd);
            timerd += timerd;
        }
     /*   new Timer().schedule(new TimerTask() {
            @Override
            public void run() {
                fallingImagesViews(colomn3, delay,b,secondDelay);
                fallingImagesViews(colomn2, delay,b,secondDelay);
                fallingImagesViews(colomn4, delay,b,secondDelay);
                fallingImagesViews(colomn1, delay,b,secondDelay);
                fallingImagesViews(colomn5, delay,b,secondDelay);
                fallingImagesViews(colomn6, delay,b,secondDelay);
                fallingImagesViews(colomn7, delay,b,secondDelay);
                fallingImagesViews(colomn8, delay,b,secondDelay);
            }
        }, 7000);/*
        new Timer().schedule(new TimerTask() {
            @Override
            public void run() {
                fallingImagesViews(colomn3,delay,b);
                fallingImagesViews(colomn2,delay,b);
                fallingImagesViews(colomn4,delay,b);
                fallingImagesViews(colomn1,delay,b);
                fallingImagesViews(colomn5,delay,b);
                fallingImagesViews(colomn6,delay,b);
                fallingImagesViews(colomn7,delay,b);
                fallingImagesViews(colomn8,delay,b);
            }
        }, 10500);
/*handler.post(new Runnable() {
    @Override
    public synchronized void run() {
        fallingImagesViews(colomn3,delay,b);

    }
});
/*
        handler1.postDelayed(new Runnable() {
            @Override
            public void run() {
                fallingImagesViews(colomn3,delay,b);
                fallingImagesViews(colomn2,delay,b);
                fallingImagesViews(colomn4,delay,b);
                fallingImagesViews(colomn1,delay,b);
                fallingImagesViews(colomn5,delay,b);
                fallingImagesViews(colomn6,delay,b);
                fallingImagesViews(colomn7,delay,b);
                fallingImagesViews(colomn8,delay,b);

            }
        },1000);
*/



      /* Handler handler = new Handler();
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {

                for (int i=0; i <colomn1.size();i++){
                    if(i!=colomn1.size()-1)
                    animateFall(colomn1.get(i),colomn1.get(i+1));
                   if(i==0) {colomn1.get(i).setImageResource(a);}
else { colomn1.get(i-1).setImageResource(back1);
colomn1.get(i).setImageResource(a);
}
                }
                animateFall(iv2_1, iv10_1, b, 2, 2000);
            }
        },5000);
*/

/*
        iv11_1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                animateFall(iv2_1, iv10_1, b, 2, 2000);

            }
        });
*/

    }

    private void beginSetVisibility() {
        for (int i = 0; i < colomn1.size(); i++) {
            colomn1.get(i).setVisibility(View.INVISIBLE);
            colomn2.get(i).setVisibility(View.INVISIBLE);
            colomn3.get(i).setVisibility(View.INVISIBLE);

            colomn4.get(i).setVisibility(View.INVISIBLE);
            colomn5.get(i).setVisibility(View.INVISIBLE);
            colomn6.get(i).setVisibility(View.INVISIBLE);
            colomn7.get(i).setVisibility(View.INVISIBLE);
            colomn8.get(i).setVisibility(View.INVISIBLE);

        }
    }

    private void beginTimerFalling(ArrayList<Integer> randomsRow1, ArrayList<Integer> randomsRow2, ArrayList<Integer> randomsRow3, int delay, int secondDelay, int period) //ArrayList<ImageView> colomn geliyordu normalde ve kolona göre ayarlıyorsun -- int image ile de göndereceğen resim
    {
        Timer timer1 = new Timer();
        TimerTask task1 = new TimerTask() {
            @Override
            public void run() {
                beginFallRowCount++;
                if (beginFallRowCount < 4) {
                    switch (beginFallRowCount) {
                        case 1:
                            colomn1 = fallingImagesViews(colomn1, delay, randomsRow1.get(0), secondDelay);
                            colomn2 = fallingImagesViews(colomn2, delay, randomsRow1.get(1), secondDelay);
                            colomn3 = fallingImagesViews(colomn3, delay, randomsRow1.get(2), secondDelay);
                            colomn4 = fallingImagesViews(colomn4, delay, randomsRow1.get(3), secondDelay);
                            colomn5 = fallingImagesViews(colomn5, delay, randomsRow1.get(4), secondDelay);
                            colomn6 = fallingImagesViews(colomn6, delay, randomsRow1.get(5), secondDelay);
                            colomn7 = fallingImagesViews(colomn7, delay, randomsRow1.get(6), secondDelay);
                            colomn8 = fallingImagesViews(colomn8, delay, randomsRow1.get(7), secondDelay);

                            break;
                        case 2:
                            colomn1 = fallingImagesViews(colomn1, delay, randomsRow2.get(0), secondDelay);
                            colomn2 = fallingImagesViews(colomn2, delay, randomsRow2.get(1), secondDelay);
                            colomn3 = fallingImagesViews(colomn3, delay, randomsRow2.get(2), secondDelay);
                            colomn4 = fallingImagesViews(colomn4, delay, randomsRow2.get(3), secondDelay);
                            colomn5 = fallingImagesViews(colomn5, delay, randomsRow2.get(4), secondDelay);
                            colomn6 = fallingImagesViews(colomn6, delay, randomsRow2.get(5), secondDelay);
                            colomn7 = fallingImagesViews(colomn7, delay, randomsRow2.get(6), secondDelay);
                            colomn8 = fallingImagesViews(colomn8, delay, randomsRow2.get(7), secondDelay);
                            break;
                        case 3:
                            colomn1 = fallingImagesViews(colomn1, delay, randomsRow3.get(0), secondDelay);
                            colomn2 = fallingImagesViews(colomn2, delay, randomsRow3.get(1), secondDelay);
                            colomn3 = fallingImagesViews(colomn3, delay, randomsRow3.get(2), secondDelay);
                            colomn4 = fallingImagesViews(colomn4, delay, randomsRow3.get(3), secondDelay);
                            colomn5 = fallingImagesViews(colomn5, delay, randomsRow3.get(4), secondDelay);
                            colomn6 = fallingImagesViews(colomn6, delay, randomsRow3.get(5), secondDelay);
                            colomn7 = fallingImagesViews(colomn7, delay, randomsRow3.get(6), secondDelay);
                            colomn8 = fallingImagesViews(colomn8, delay, randomsRow3.get(7), secondDelay);
                            break;

                    }


                } else {
                    timer1.cancel();
                    beginFallRowCount = 0;
                }

            }
        };
        timer1.schedule(task1, 0, period);

    }


    private void imgToNum() {
        a = R.drawable.a;
        b = R.drawable.b;
        c = R.drawable.c;
        cc = R.drawable.cc;
        d = R.drawable.d;
        e = R.drawable.e;
        f = R.drawable.f;
        g = R.drawable.g;
        gg = R.drawable.gg;
        h = R.drawable.h;
        i = R.drawable.i;
        ii = R.drawable.ii;
        j = R.drawable.j;
        k = R.drawable.k;
        l = R.drawable.l;
        m = R.drawable.m;
        n = R.drawable.n;
        o = R.drawable.o;
        oo = R.drawable.oo;
        p = R.drawable.p;
        r = R.drawable.r;
        s = R.drawable.s;
        ss = R.drawable.ss;
        t = R.drawable.t;
        u = R.drawable.u;
        uu = R.drawable.uu;
        vv = R.drawable.v;
        y = R.drawable.y;
        z = R.drawable.z;
        back = R.drawable.back;
        back1 = R.drawable.back1;
    }

    private HashMap scoreOfAlphabetic(HashMap<String, Integer> hashMap) {
        hashMap.put("a", 1);
        hashMap.put("b", 3);
        hashMap.put("c", 4);
        hashMap.put("ç", 4);
        hashMap.put("d", 3);
        hashMap.put("e", 1);
        hashMap.put("f", 7);
        hashMap.put("g", 5);
        hashMap.put("ğ", 8);
        hashMap.put("h", 5);
        hashMap.put("i", 2);
        hashMap.put("ii", 1);
        hashMap.put("j", 10);
        hashMap.put("k", 1);
        hashMap.put("l", 1);
        hashMap.put("m", 2);
        hashMap.put("n", 1);
        hashMap.put("o", 2);
        hashMap.put("ö", 7);
        hashMap.put("p", 5);
        hashMap.put("r", 1);
        hashMap.put("s", 2);
        hashMap.put("ş", 4);
        hashMap.put("t", 1);
        hashMap.put("u", 2);
        hashMap.put("ü", 3);
        hashMap.put("v", 7);
        hashMap.put("y", 3);
        hashMap.put("z", 4);

        return hashMap;
    }

    private HashMap StringLetterOfIntImages(HashMap<Integer, String> hashMap) {
        hashMap.put(a, "a");
        hashMap.put(b, "b");
        hashMap.put(c, "c");
        hashMap.put(cc, "ç");
        hashMap.put(d, "d");
        hashMap.put(e, "e");
        hashMap.put(f, "f");
        hashMap.put(g, "g");
        hashMap.put(gg, "ğ");
        hashMap.put(h, "h");
        hashMap.put(i, "ı");
        hashMap.put(ii, "i");
        hashMap.put(j, "j");
        hashMap.put(k, "k");
        hashMap.put(l, "l");
        hashMap.put(m, "m");
        hashMap.put(n, "n");
        hashMap.put(o, "o");
        hashMap.put(oo, "ö");
        hashMap.put(p, "p");
        hashMap.put(r, "r");
        hashMap.put(s, "s");
        hashMap.put(ss, "ş");
        hashMap.put(t, "t");
        hashMap.put(u, "u");
        hashMap.put(uu, "ü");
        hashMap.put(vv, "v");
        hashMap.put(y, "y");
        hashMap.put(z, "z");

        return hashMap;
    }


    public void setColomn() {
        colomn1.add(iv11_1);
        colomn1.add(iv10_1);
        colomn1.add(iv9_1);
        colomn1.add(iv8_1);
        colomn1.add(iv7_1);
        colomn1.add(iv6_1);
        colomn1.add(iv5_1);
        colomn1.add(iv4_1);
        colomn1.add(iv3_1);
        colomn1.add(iv2_1);
        colomn1.add(iv1_1);

        colomn2.add(iv11_2);
        colomn2.add(iv10_2);
        colomn2.add(iv9_2);
        colomn2.add(iv8_2);
        colomn2.add(iv7_2);
        colomn2.add(iv6_2);
        colomn2.add(iv5_2);
        colomn2.add(iv4_2);
        colomn2.add(iv3_2);
        colomn2.add(iv2_2);
        colomn2.add(iv1_2);

        colomn3.add(iv11_3);
        colomn3.add(iv10_3);
        colomn3.add(iv9_3);
        colomn3.add(iv8_3);
        colomn3.add(iv7_3);
        colomn3.add(iv6_3);
        colomn3.add(iv5_3);
        colomn3.add(iv4_3);
        colomn3.add(iv3_3);
        colomn3.add(iv2_3);
        colomn3.add(iv1_3);

        colomn4.add(iv11_4);
        colomn4.add(iv10_4);
        colomn4.add(iv9_4);
        colomn4.add(iv8_4);
        colomn4.add(iv7_4);
        colomn4.add(iv6_4);
        colomn4.add(iv5_4);
        colomn4.add(iv4_4);
        colomn4.add(iv3_4);
        colomn4.add(iv2_4);
        colomn4.add(iv1_4);

        colomn5.add(iv11_5);
        colomn5.add(iv10_5);
        colomn5.add(iv9_5);
        colomn5.add(iv8_5);
        colomn5.add(iv7_5);
        colomn5.add(iv6_5);
        colomn5.add(iv5_5);
        colomn5.add(iv4_5);
        colomn5.add(iv3_5);
        colomn5.add(iv2_5);
        colomn5.add(iv1_5);

        colomn6.add(iv11_6);
        colomn6.add(iv10_6);
        colomn6.add(iv9_6);
        colomn6.add(iv8_6);
        colomn6.add(iv7_6);
        colomn6.add(iv6_6);
        colomn6.add(iv5_6);
        colomn6.add(iv4_6);
        colomn6.add(iv3_6);
        colomn6.add(iv2_6);
        colomn6.add(iv1_6);

        colomn7.add(iv11_7);
        colomn7.add(iv10_7);
        colomn7.add(iv9_7);
        colomn7.add(iv8_7);
        colomn7.add(iv7_7);
        colomn7.add(iv6_7);
        colomn7.add(iv5_7);
        colomn7.add(iv4_7);
        colomn7.add(iv3_7);
        colomn7.add(iv2_7);
        colomn7.add(iv1_7);

        colomn8.add(iv11_8);
        colomn8.add(iv10_8);
        colomn8.add(iv9_8);
        colomn8.add(iv8_8);
        colomn8.add(iv7_8);
        colomn8.add(iv6_8);
        colomn8.add(iv5_8);
        colomn8.add(iv4_8);
        colomn8.add(iv3_8);
        colomn8.add(iv2_8);
        colomn8.add(iv1_8);
    }

    public void generateNumberLetters(ArrayList<Integer> randomsRow) {

        for (int i = 0; i < 8; i++) //buradaki 8 sutun sayısı(we assign letters for 3 rows)
        {
            int num = random.nextInt(29);
            randomsRow.add(letters.get(num));

        }
    }

    public int generateNumberLetters() {
        int num = random.nextInt(29);
        return num;

    }

    public int generateNumberWhichColomn() {
        int num = random.nextInt(8);
        return num;
    }

   /* public void checkEnd() {
        if ((colomn1.get(1).getVisibility() == View.VISIBLE) || (colomn2.get(1).getVisibility() == View.VISIBLE) || (colomn3.get(1).getVisibility() == View.VISIBLE) || (colomn4.get(1).getVisibility() == View.VISIBLE) || (colomn5.get(1).getVisibility() == View.VISIBLE) || (colomn6.get(1).getVisibility() == View.VISIBLE) || (colomn7.get(1).getVisibility() == View.VISIBLE) || (colomn8.get(1).getVisibility() == View.VISIBLE)) {
// GAME OVER alert dialogunu getirirsin
            //Ve enable et imageviewi
            alertGameOver();
        }

    }*/

    public void alertGameOver() {
        //BURASIDA DÜZENLENECEK
        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(MainActivity.this);
        alertDialogBuilder.setTitle("GAME OVER");
        alertDialogBuilder.setMessage("\nSCORE: " + score).setCancelable(false).setPositiveButton(" NEW", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                Intent intent = new Intent(MainActivity.this, MainActivity.class);
                finish();
                startActivity(intent);

            }
        }).setNegativeButton("EXİT", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                Intent intent = new Intent(MainActivity.this, FirstPageActivity.class);
                finish();
                startActivity(intent);
            }
        });
        AlertDialog alertDialog = alertDialogBuilder.create();
        DBHelper dbHelper = new DBHelper(getApplicationContext());
        dbHelper.writeData(score);
        alertDialog.show();

    }


    public ArrayList<ImageView> fallingImagesViews(ArrayList<ImageView> colomn, int firstDelay, int image, int seconDelay) {
        //deleteEmptyINColomn(colomn);
        //oyun biterse gameover true olur
        if (life >= 1 && !gameOver) {
            colomn = falling(colomn, firstDelay, image, seconDelay);
        } else if (!gameOver) {
            colomn1 = falling(colomn1, firstDelay, letters.get(generateNumberLetters()), seconDelay);
            colomn2 = falling(colomn2, firstDelay, letters.get(generateNumberLetters()), seconDelay);
            colomn3 = falling(colomn3, firstDelay, letters.get(generateNumberLetters()), seconDelay);
            colomn4 = falling(colomn4, firstDelay, letters.get(generateNumberLetters()), seconDelay);
            colomn5 = falling(colomn5, firstDelay, letters.get(generateNumberLetters()), seconDelay);
            colomn6 = falling(colomn6, firstDelay, letters.get(generateNumberLetters()), seconDelay);
            colomn7 = falling(colomn7, firstDelay, letters.get(generateNumberLetters()), seconDelay);
            colomn8 = falling(colomn8, firstDelay, letters.get(generateNumberLetters()), seconDelay);
            life = 3;
        }
        return colomn;
    }

    private ArrayList<ImageView> falling(ArrayList<ImageView> colomn, int firstDelay, int image, int seconDelay) {
        for (int i = 0; i < colomn.size(); i++) {
//her seferinde kontol edilmeli boşluk altta var mı o boşluklar kapanmalı


            int finalI = i;
            firstDelay = firstDelay + seconDelay;
            if (colomn.get(finalI).getVisibility() != View.VISIBLE) {
                handler.postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        //  deleteEmptyINColomnBottomToTopp(colomn, 10);
                        //bu for yeni eklendi
                       /*for(int k=finalI;k<colomn.size();k++){
                            if(!colomn.get(k).getTag().equals("x")){
                                int lastindex=k;
                                System.out.println("lastindex"+k);

                                lastIndex=lastindex;//deleteEmptyINColomnTopToBottom(colomn,k);
                                break;}
                        }*/
                        if (finalI == 0) {
                            // colomn.get(finalI - 1).setImageResource(back);
                            if (colomn.get(finalI + 1).getVisibility() == View.VISIBLE) {
                                //OYUN BİTER
                                System.out.println("oyun bitti");
                                readyText.setText("GAME\nOVER");
                                readyText.setVisibility(View.VISIBLE);
                                gameOver = true;
                                alertGameOver();

                            } else {

                                colomn.get(finalI).setVisibility(View.INVISIBLE);
                                //  colomn.get(finalI).setEnabled(false);
                                colomn.get(finalI).setTag("x");

                            }

                        } else {
                            colomn.get(finalI - 1).setVisibility(View.INVISIBLE);
                            colomn.get(finalI - 1).setTag("x");
                            //   colomn.get(finalI - 1).setEnabled(false);
                            colomn.get(finalI).setVisibility(View.VISIBLE);
                            colomn.get(finalI).setImageResource(image);
                            colomn.get(finalI).setTag("" + image);
                        }

                     /*else {
                        colomn.get(finalI - 1).setImageResource(a);
                        colomn.get(finalI - 1).setVisibility(View.VISIBLE);

                    }*/
                    }
                }, firstDelay);
            } else {
                //burası şuan en üst kısım demek o zaman buraya has altları silen fonsiyon yapıcaz
                //function(finalI)
                //colomn.get(finalI).setEnabled(true);
                break;
               /* if(finalI!=10){
                deleteEmptyINColomnBottomToTopp(colomn,finalI);}
                else  {deleteEmptyINColomnBottomToTopp(colomn,finalI-1);}*/

            }
        }
        return colomn;
    }

    public void setTagAll() {
        for (int i = 0; i < colomn1.size(); i++) {
            colomn1.get(i).setTag("x");
            colomn2.get(i).setTag("x");
            colomn3.get(i).setTag("x");

            colomn4.get(i).setTag("x");
            colomn5.get(i).setTag("x");
            colomn6.get(i).setTag("x");
            colomn7.get(i).setTag("x");
            colomn8.get(i).setTag("x");

        }
    }

    public void setEnabletAll(boolean b) {
        for (int i = 0; i < colomn1.size(); i++) {
            colomn1.get(i).setEnabled(b);
            colomn2.get(i).setEnabled(b);
            colomn3.get(i).setEnabled(b);

            colomn4.get(i).setEnabled(b);
            colomn5.get(i).setEnabled(b);
            colomn6.get(i).setEnabled(b);
            colomn7.get(i).setEnabled(b);
            colomn8.get(i).setEnabled(b);


        }

    }

    private ArrayList<ImageView> fallImagesViewSetWithPeriod(ArrayList<ImageView> colomn, int delay, int image, int secondDelay) //ArrayList<ImageView> colomn geliyordu normalde ve kolona göre ayarlıyorsun -- int image ile de göndereceğen resim
    {

        colomn = fallingImagesViews(colomn, delay, image, secondDelay);
        return colomn;
    /*   if(period!=0){
           int count=period/timerd;
           if(score<100)
               period=count*5000;
           else if(score<200)
               period=count*4000;
           else if(score<300)
               period=count*3000;
           else if(score<400)
               period=count*2000;
           else if (score<500)
               period=count*1000;
           else
               period=count*5000;
       }
       */

    }

    public ArrayList<ImageView> deleteEmptyINColomn(ArrayList<ImageView> colomn) {
        //yazdırma için

        for (int i = colomn.size() - 1; i > 0; i--) {
            if (colomn.get(i).getTag().toString().equals("x")) {
                for (int j = i - 1; j > 0; j--) {
                    if (!(colomn.get(j).getTag().toString().equals("x"))) {
                        String temp = colomn.get(j).getTag().toString();
                        colomn.get(i).setTag("" + temp);
                        colomn.get(i).setImageResource(Integer.parseInt(temp));
                        colomn.get(j).setTag("x");
                        colomn.get(j).setVisibility(View.INVISIBLE);
                        colomn.get(i).setVisibility(View.VISIBLE);
                        if (j != 1) j--;
                        else break;
                    }
                }

            }


        }
        //yazdırma öncesi sonrası için
        return colomn;
    }

    public int scoreCalculate(ArrayList<String> display, int score) {
        for (int i = 0; i < display.size(); i++) {
            String s = display.get(i).toString().toLowerCase(Locale.forLanguageTag("tr"));
            if (s.equals("ı")) {
                score += scoreOfAlphabeticalMap.get("i");

            } else if (s.equals("i")) {
                score += scoreOfAlphabeticalMap.get("ii");

            } else {
                score += scoreOfAlphabeticalMap.get(s);
            }
        }
        return score;
    }

    public void deleteEmptyINColomnTopToBottom(ArrayList<ImageView> colomn, int index) {
        for (int i = colomn.size() - 1; i >= index; i--) {
            if (colomn.get(i).getTag().toString().equals("x")) {
                for (int j = i - 1; j >= index; j--) {
                    if (!(colomn.get(j).getTag().toString().equals("x"))) {
                        String temp = colomn.get(j).getTag().toString();
                        colomn.get(i).setTag("" + temp);
                        colomn.get(i).setImageResource(Integer.parseInt(temp));
                        colomn.get(j).setTag("x");
                        colomn.get(j).setVisibility(View.INVISIBLE);
                        colomn.get(i).setVisibility(View.VISIBLE);
                        if (j != 1) j--;
                        else break;
                    }
                }

            }


        }
    }

    public ArrayList<ImageView> deleteEmptyINColomnBottomToTop(ArrayList<ImageView> colomn, int index) {

        int i = index;
        while (colomn.get(i - 1).getVisibility() == View.VISIBLE) {
            colomn.get(i).setTag("" + colomn.get(i - 1).getTag());
            colomn.get(i).setImageResource(Integer.parseInt((String) colomn.get(i - 1).getTag()));
            colomn.get(i).setVisibility(View.VISIBLE);
            colomn.get(i - 1).setVisibility(View.INVISIBLE);
            colomn.get(i - 1).setTag("x");
            //   colomn.get(i-1).setEnabled(false);
            //  colomn.get(i).setEnabled(true);
            i--;
        }

        return colomn;
    }

    public void deleteEmptyINColomnBottomToTopp(ArrayList<ImageView> colomn, int index) {
       /* int i;
       for(int j=index;j>0;j--){
           if(colomn.get(j).getVisibility() != View.VISIBLE){
             i=j;
               while (colomn.get(i - 1).getVisibility() == View.VISIBLE && i!=0) {
                   colomn.get(i).setTag("" + colomn.get(i - 1).getTag());
                   colomn.get(i).setImageResource(Integer.parseInt((String) colomn.get(i - 1).getTag()));
                   colomn.get(i).setVisibility(View.VISIBLE);
                   colomn.get(i - 1).setVisibility(View.INVISIBLE);
                   colomn.get(i - 1).setTag("x");
                   i--;
               }

               break;}
       }

*/
        runOnUiThread(new Runnable() {

            @Override
            public void run() {

                if (colomn.get(index + 1).getVisibility() == View.INVISIBLE) {
                    colomn.get(index + 1).setVisibility(View.VISIBLE);
                    colomn.get(index + 1).setTag("" + colomn.get(index).getTag());
                    colomn.get(index + 1).setImageResource(Integer.parseInt((String) colomn.get(index).getTag()));
                    colomn.get(index).setVisibility(View.INVISIBLE);
                    colomn.get(index).setTag("x");
                    //   colomn.get(index).setEnabled(true);
                }

            }
        });


    }

    @Override
    public void onBackPressed() {
        AlertDialog.Builder alert = new AlertDialog.Builder(MainActivity.this);
        alert.setTitle(" Find Words Game ");
        alert.setMessage("Are you sure exit?");
        alert.setCancelable(false);//kapatılamaz
        //alert.setIcon(R.mipmap.);//iconlarımız mipmap klasörü içindedir
        alert.setPositiveButton("NO", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                dialogInterface.dismiss();
                ;

            }
        });
        alert.setNegativeButton("YES", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {

                Intent intent = new Intent(MainActivity.this, FirstPageActivity.class);
                finish();
                startActivity(intent);

            }
        });
        alert.show();
    }
}





package com.mytutorials.findwordsgame;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;

import java.util.ArrayList;

public class ScoreTableActivity extends AppCompatActivity {
    private ListView mListView;
    private ImageView imgCup;
    private ArrayAdapter<String> adapter;
    private ArrayList<String> myData = new ArrayList<>();
    private ArrayList<Integer> scoreArrayList = new ArrayList<>();
    private ArrayList<String> dateArrayList = new ArrayList<>();
    private Cursor cursor;
    private Cursor cursor1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_score_table);

        mListView = findViewById(R.id.listView);
        imgCup = findViewById(R.id.imgCup);
        imgCup.setImageResource(R.drawable.cup);
        DBHelper dbHelper = new DBHelper(getApplicationContext());
        cursor = dbHelper.getCursor();
        cursor1 = dbHelper.getCursor();
        scoreArrayList = dbHelper.getDataScore(scoreArrayList, cursor);
        dateArrayList = dbHelper.getDataDate(dateArrayList, cursor1);

        if (!scoreArrayList.isEmpty() && !dateArrayList.isEmpty()) {
            for (int i = 0; i < scoreArrayList.size(); i++) {
                myData.add(scoreArrayList.get(i).toString() + "\n" + dateArrayList.get(i));
                //System.out.println(scoreArrayList.get(i).toString() + " " + dateArrayList.get(i));
            }
            if (!myData.isEmpty()) {
                adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, myData);
                mListView.setAdapter(adapter);
            }
        } else {
            myData.add("YOU DON'T HAVE ANY SCORE\n\n\t\tLET'S PlAY!");
            adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, myData);
            mListView.setAdapter(adapter);
            mListView.setClickable(false);
        }

    }

    @Override
    public void onBackPressed() {
        Intent intent = new Intent(ScoreTableActivity.this, FirstPageActivity.class);
        finish();
        startActivity(intent);
    }
}




package com.mytutorials.findwordsgame;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.graphics.Color;
import android.graphics.Typeface;
import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import android.text.Spannable;
import android.text.style.ForegroundColorSpan;
import android.text.style.RelativeSizeSpan;
import android.text.style.StyleSpan;
import android.widget.ImageView;
import android.widget.TextView;

public class AboutGameActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_about_game);

        // Toolbar'i ayarla
        /*Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        getSupportActionBar().setTitle("Hakkında");*/

        // TextView'i ayarla
        TextView textView1 = findViewById(R.id.textView1);
        String aboutText1 = "\n\tOyun Yapısı:\n\n" +
                "\t-- Oyun 8x10’luk( yani 8 sütun 10 satır olacak) bir alan üzerinde kelime seçilerek anlamlı kelimeler " +
                "oluşturulacaktır. Her bir " +
                "matris alanına bir harf gelecek şekilde tasarlanmıştır. Harfler yukarıdan aşağı yönde " +
                "düşmektedir. En üst kısmından aşağıya doğru birim birim tabana kadar inmesi beklenmektedir.\n"+"\t-- Oyun ilk başladığında yukarıdan aşağıya doğru 3 satır tamamen dolu olacak şekilde rastgele " +
                "harfler indirilecek ve oyuna başlanacaktır.\n"+"\t-- Harfler anlamlı bir kelime oluşturulabilmesi için sesli veya sessiz harf karışık gelmesi " +
                "gerekmektedir. \n"+"\t-- Oyun başlangıcından sonra belirlenen süre aralıklarında yukarıdan aşağıya doğru rastgele " +
                "herhangi bir sütundan harf düşmesi beklenmektedir. Harfler sesli veya sessiz olmak üzere " +
                "karışık bir şekilde olması gereklidir.\n"+"\t-- Harf düşmesi işlemi ilk başta 5 saniyede bir gerçekleşecektir. Bu süre puanın her 100 ve " +
                "katlarına ulaştığında bir saniye azalacaktır. Azalma işlemi 1 saniye ulaşıncaya kadar devam " +
                "edecektir. 1 saniye ulaştığında oyunun devamında bu süre ile harf düşmesi beklenmektedir. \n" +
                "\t\t\t\tpuan 100 olduğunda 4 saniye\n" +
                "\t\t\t\tpuan 200 olduğunda 3 saniye\n" +
                "\t\t\t\tpuan 300 olduğunda 2 saniye\n" +
                "\t\t\t\tpuan 400 olduğunda 1 saniye düşecek ve o şekilde oyun devam edecektir.\n"+"\t-- Oyun içerisinde doğru kelimenin oluşturulması ile puan hesaplanması beklenmektedir. Puan " +
                "hesaplaması için oluşturulan kelimenin harflerine bağlı olacak şekilde puan hesaplanacaktır. " +
                "Her bir harfin belli puanı bulunmaktadır. Bu harf puanlarına bakılarak kelimenin puanı " +
                "hesaplanıp genel puana eklenecektir. Her harfin puanı aşağıdaki tabloda yer almaktadır.";
        int startIndex = aboutText1.indexOf("Oyun Yapısı:");
        int endIndex = startIndex + "Oyun Yapısı:".length();
        textView1.setText(aboutText1, TextView.BufferType.SPANNABLE);
        Spannable spannable = (Spannable) textView1.getText();
        spannable.setSpan(new RelativeSizeSpan(1.5f), startIndex, endIndex, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        spannable.setSpan(new StyleSpan(Typeface.BOLD), startIndex, endIndex, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        spannable.setSpan(new ForegroundColorSpan(Color.BLACK), startIndex, endIndex, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);


        ImageView aboutImage = findViewById(R.id.imageView);
        aboutImage.setImageResource(R.drawable.about_image);

        // TextView'i ayarla
        TextView textView2 = findViewById(R.id.textView2);
        String aboutText2 = "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tÖrnek Puan hesaplama:\n" +
                "\t\t\t“Mobil” kelimesinin puanı 2+2+3+1+1 =9 puandır.\n\n"+"\t-- Harf doğru ise puan hesaplandıktan sonra harfler ekrandan kaybolacak ve üstündeki harfler " +
                "aşağıya doğru hareket edecektir. Yani aralarda boşluklar olmayacaktır.\n"+"\t-- Oluşturulan kelimenin yanlış olma durumu kayıt altına alınacaktır. 3 kez yanlış girilmesi " +
                "durumunda tüm sütunlardan harfler düşecektir ve hatalı kelime sayısı sıfırlanacaktır. Her üç " +
                "yanlış kelime girilmesinde aynı işlem gerçekleşecektir.\n"+"\t-- Oyun bir sütunun yukarıya doğru harfler ile tamamen dolması ile sonlanacaktır. " +
                "Sonlandırdıktan sonra puanı güncel puan listesine eklenecektir. Güncel puan listesi sıralı bir " +
                "şekilde olmalıdır. En üstte en yüksek puandan en düşük puana kadar sıralanması " +
                "beklenmektedir.";
        textView2.setText(aboutText2);




    }
    @Override
    public void onBackPressed() {
        Intent intent = new Intent(AboutGameActivity.this,FirstPageActivity.class);
        finish();
        startActivity(intent);
    }
}


package com.mytutorials.findwordsgame;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import java.sql.ResultSet;
import java.sql.SQLOutput;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;

public class DBHelper extends SQLiteOpenHelper {

    private static final String DATABASE_PATH = "/data/data/com.mytutorials.findwordsgame/";
    private static final String DATABASE_NAME = "words.db";
    private static final int SCHEMA_VERSION = 1;
    private static final String TABLE_NAME = "words";
    private static final String COLUMN_WORD = "word";
    public static  SQLiteDatabase database = null;

    public DBHelper(Context context) {
        super(context, DATABASE_NAME, null, SCHEMA_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {

    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

    }

    public Cursor fetchData(String arg1){
        String databasePath = DATABASE_PATH + DATABASE_NAME;
        database = SQLiteDatabase.openDatabase(databasePath, null, SQLiteDatabase.OPEN_READWRITE);
        database.setVersion(1);
        Cursor cursor=database.rawQuery("select * from "+TABLE_NAME+" where "+COLUMN_WORD+"='"+arg1+"'", null);
        return cursor;
    }
    public void writeData(int _score){
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy.MM.dd G 'at' HH:mm");
        String currentDateandTime = sdf.format(new Date());
        String databasePath = DATABASE_PATH + DATABASE_NAME;
        database = SQLiteDatabase.openDatabase(databasePath, null, SQLiteDatabase.OPEN_READWRITE);
        database.setVersion(1);
        try {
            database.execSQL("CREATE TABLE IF NOT EXISTS scores (score INT,date VARCHAR)");
            ContentValues values = new ContentValues();
            values.put("score",_score);
            values.put("date",currentDateandTime);
            database.insert("scores",null,values);
         //   database.execSQL("INSERT INTO scores(score,date) VALUES ("+_score+","+currentDateandTime+")");
            System.out.println("done");
        }
        catch (Exception e){ e.printStackTrace();}


    }

    public Cursor getCursor() {
        //get data
        String databasePath = DATABASE_PATH + DATABASE_NAME;
        database = SQLiteDatabase.openDatabase(databasePath, null, SQLiteDatabase.OPEN_READWRITE);
        database.setVersion(1);
        database.execSQL("CREATE TABLE IF NOT EXISTS scores (score INT,date VARCHAR)");
        Cursor cursor= database.rawQuery("SELECT * FROM scores order by score DESC",null);

        return cursor;
    }
    public ArrayList<Integer> getDataScore(ArrayList<Integer> scoreArrayList,Cursor cursor){
        int scoreIndex=cursor.getColumnIndex("score");
        int i=0;
        while(cursor.moveToNext()){
            // System.out.println("score = "+cursor.getInt(scoreIndex)+"  date= "+cursor.getString(dateIndex));
            scoreArrayList.add(cursor.getInt(scoreIndex));
            i++;
        }
        return scoreArrayList;
    }

    public ArrayList<String> getDataDate(ArrayList<String> dateArrayList,Cursor cursor){
        int dateIndex=cursor.getColumnIndex("date");
        int i=0;
        while(cursor.moveToNext()){
            // System.out.println("score = "+cursor.getInt(scoreIndex)+"  date= "+cursor.getString(dateIndex));
            dateArrayList.add(cursor.getString(dateIndex));
            i++;
        }
        return dateArrayList;
    }


}





<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
    android:interpolator="@android:anim/accelerate_interpolator"
    android:repeatMode="reverse">
    <!--Fade animation  -->

    <alpha
        android:fromAlpha="0"
        android:toAlpha="1"
        android:duration="2000" >
    </alpha>

    <alpha
        android:startOffset="2000"
        android:fromAlpha="1"
        android:toAlpha="0"
        android:duration="2000" >
    </alpha>

</set>


<?xml version="1.0" encoding="utf-8"?>
<shape android:shape="rectangle" xmlns:android="http://schemas.android.com/apk/res/android">
<solid android:color="@color/green"/>
    <corners android:radius="20dp"/>
    <size android:height="70dp"
        android:width="80dp"/>
</shape>




<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="@color/blue"/>
    <corners android:radius="20dp"/>
    <size android:height="31dp"
        android:width="92dp"/>
</shape>



<?xml version="1.0" encoding="utf-8"?>
<shape  android:shape="rectangle" xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="@color/red"/>
    <corners android:radius="20dp"/>
    <size android:height="70dp"
        android:width="80dp"/>
</shape>


<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="@color/purple"/>
    <corners android:radius="20dp"/>
    <size android:height="63dp"
        android:width="184dp"/>
</shape>


<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="@color/orange"/>
    <corners android:radius="20dp"/>
    <size android:height="63dp"
        android:width="184dp"/>
</shape>


<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#3F51B5"/>
    <corners
        android:radius="30dp" />
    <padding
        android:left="10dp"
        android:top="10dp"
        android:right="10dp"
        android:bottom="10dp" />
</shape>




<?xml version="1.0" encoding="utf-8"?>
<shape  android:shape="line" xmlns:android="http://schemas.android.com/apk/res/android">
    <stroke
        android:width="10dp"
        android:color="#000000" />
    <size android:height="2dp" />
</shape>


<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="30dp"
    android:height="30dp"
    android:viewportWidth="24.0"
    android:viewportHeight="24.0">
    <path
        android:fillColor="#680D0D"
        android:pathData="M12,21.35l-1.45,-1.32C5.4,15.36 2,12.28 2,8.5 2,5.42 4.42,3 7.5,3c1.74,0 3.41,0.81 4.5,2.09C13.09,3.81 14.76,3 16.5,3 19.58,3 22,5.42 22,8.5c0,3.78 -3.4,6.86 -8.55,11.54L12,21.35z"/>
</vector>



<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:background="@drawable/about_background">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <!-- Resim alanı
        <ImageView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:scaleType="centerCrop"
            android:src="@drawable/about_background" /> -->

        <!-- Toolbar
        <androidx.appcompat.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            android:background="?attr/colorPrimary"
            android:elevation="4dp"
            android:theme="?attr/actionBarTheme" /> -->

        <RelativeLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">
            <!-- Metin alanı -->
            <TextView
                android:id="@+id/textView1"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/about_text1" />
            <!-- Resim alanı -->
            <ImageView
                android:id="@+id/imageView"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:src="@drawable/about_image"
                android:layout_below="@id/textView1" />
            <TextView
                android:id="@+id/textView2"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="@string/about_text2"
                android:layout_below="@id/imageView" />


        </RelativeLayout>
    </ScrollView>
</RelativeLayout>




<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/relativeLayout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".FirstPageActivity"
   android:background="@drawable/img_falling_image">


    <Button
        android:id="@+id/btn_new_game"
        android:layout_width="184dp"
        android:layout_height="63dp"
        android:text="NEW GAME"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.497"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.339"
        android:alpha="0.8"
        android:background="@drawable/btn_shape_newgame"/>


    <Button
        android:id="@+id/btn_about_game"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginBottom="104dp"
        android:text="ABOUT GAME"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="@+id/btn_exit"
        app:layout_constraintStart_toStartOf="@+id/btn_exit"
        android:alpha="0.8"
        android:background="@drawable/btn_shape_aboutgame" />

    <Button
        android:id="@+id/btn_exit"
        android:layout_width="184dp"
        android:layout_height="63dp"
        android:text="EXIT"
        app:layout_constraintBottom_toTopOf="@+id/btn_about_game"
        app:layout_constraintEnd_toEndOf="@+id/btn_score_table"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="@+id/btn_score_table"
        app:layout_constraintTop_toBottomOf="@+id/btn_score_table"
        app:layout_constraintVertical_bias="0.373"
        android:alpha="0.8"
        android:background="@drawable/btn_shape_delete"/>

    <Button
        android:id="@+id/btn_score_table"
        android:layout_width="184dp"
        android:layout_height="63dp"
        android:layout_marginTop="44dp"
        android:text="SCORE TABLE"
        app:layout_constraintEnd_toEndOf="@+id/btn_new_game"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="@+id/btn_new_game"
        app:layout_constraintTop_toBottomOf="@+id/btn_new_game"
        android:alpha="0.8"
        android:background="@drawable/btn_shape_score_table" />



</androidx.constraintlayout.widget.ConstraintLayout>





<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:background="@drawable/back2"
    android:id="@+id/mainRelativeLayout">

    <androidx.constraintlayout.widget.ConstraintLayout

        android:layout_width="match_parent"
        android:layout_height="15dp"
        android:layout_below="@+id/images"
        android:layout_alignParentStart="true"
        android:layout_marginStart="0dp"
        android:background="@drawable/ground"
        android:id="@+id/ground"/>

    <androidx.constraintlayout.widget.ConstraintLayout

        android:layout_width="match_parent"
        android:layout_height="15dp"
        android:layout_below="@+id/images"
        android:layout_alignParentStart="true"
        android:layout_marginStart="0dp"
        android:layout_marginTop="-493dp"
        android:background="@drawable/ground" />

    <include
        android:id="@+id/images"
        layout="@layout/images"
        android:layout_width="wrap_content"
        android:layout_height="528dp"

        android:layout_centerInParent="true"
        android:layout_marginLeft="6dp"
        android:layout_marginRight="6dp" />

    <TextView
        android:id="@+id/textViewsReady"
        android:layout_width="184dp"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="110dp"
        android:layout_marginEnd="117dp"
        android:layout_marginBottom="31dp"
        android:text="READY!"
        android:textAlignment="center"
        android:textColor="#ffff"
        android:textSize="40dp"
        android:textStyle="bold" />

    <ImageView
        android:id="@+id/blockImage"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:alpha="0.7"
        android:background="#2E1212"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:id="@+id/tickButton"
        android:layout_width="92dp"
        android:layout_height="79dp"
        android:layout_below="@+id/images"
        android:layout_alignStart="@+id/images"
        android:layout_alignParentEnd="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="311dp"
        android:layout_marginTop="15dp"
        android:layout_marginEnd="2dp"
        android:layout_marginRight="0dp"
        android:layout_marginBottom="7dp"
        android:background="@drawable/btn_shape"
        android:text="✓"
        android:textColor="#fff"
        android:textSize="50dp" />

    <Button
        android:id="@+id/deleteButton"
        android:layout_width="92dp"
        android:layout_height="79dp"
        android:layout_below="@+id/images"
        android:layout_alignParentStart="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="1dp"
        android:layout_marginLeft="0dp"
        android:layout_marginTop="15dp"
        android:layout_marginEnd="318dp"
        android:layout_marginBottom="6dp"
        android:background="@drawable/btn_shape_delete"
        android:text="X"
        android:textColor="@color/black"
        android:textSize="50dp" />

    <TextView
        android:id="@+id/textScore"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_above="@+id/images"
        android:layout_alignStart="@+id/images"
        android:layout_marginStart="0dp"
        android:layout_marginBottom="34dp"
        android:text="SCORE: 0"
        android:textSize="25sp"
        android:textColor="@color/black"/>

    <TextView
        android:id="@+id/textHeart"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_above="@+id/images"
        android:layout_marginStart="0dp"
        android:layout_marginEnd="5dp"
        android:layout_marginRight="20dp"
        android:layout_marginBottom="34dp"
        android:layout_toStartOf="@+id/heart"
        android:layout_toLeftOf="@+id/heart"
        android:text="3"
        android:textSize="25sp"
        android:textColor="@color/black"/>

    <ImageView
        android:id="@+id/heart"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/ic_android_heart"
        android:layout_above="@+id/images"
        android:layout_alignEnd="@+id/images"
        android:layout_marginBottom="34dp"
        android:layout_marginEnd="5dp"/>

    <TextView
        android:id="@+id/textDisplay"
        android:layout_width="204dp"
        android:layout_height="71dp"
        android:layout_alignTop="@+id/ground"
        android:layout_alignParentStart="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="106dp"
        android:layout_marginTop="15dp"
        android:layout_marginEnd="106dp"
        android:layout_marginBottom="7dp"
        android:background="#99141414"
        android:text="\n"
        android:textAlignment="center"
        android:textColor="@color/white"
        android:textSize="20sp"
        android:textStyle="bold" />


</RelativeLayout>






<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".ScoreTableActivity"
    android:background="#952907">

    <ImageView
        android:id="@+id/imgCup"
        android:layout_width="200dp"
        android:layout_height="200dp"
        android:scaleType="fitXY"
        android:alpha="0.7"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.497"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.058"
        tools:srcCompat="@drawable/cup" />

    <ListView
        android:id="@+id/listView"
        android:layout_width="284dp"
        android:layout_height="284dp"
        android:background="#56141414"
        android:clickable="false"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.496"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/imgCup"
        app:layout_constraintVertical_bias="0.323"
        android:backgroundTint="@color/white"/>
</androidx.constraintlayout.widget.ConstraintLayout>







<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="wrap_content"
    android:weightSum="1"
    android:layout_height="50dp">



    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="50dp"
        android:weightSum="8"
        android:layout_weight="1"
        android:orientation="horizontal">

        <ImageView
            android:id="@+id/fiv10_1"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"></ImageView>
        <ImageView
            android:id="@+id/fiv10_2"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/fiv10_3"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/fiv10_4"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/fiv10_5"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/fiv10_6"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/fiv10_7"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/fiv10_8"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
    </LinearLayout>
</LinearLayout>





<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:weightSum="11"
    android:layout_height="match_parent">
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:weightSum="8"
        android:layout_weight="1"
        android:orientation="horizontal">
        <ImageView
            android:id="@+id/iv11_1"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv11_2"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv11_3"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv11_4"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv11_5"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv11_6"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv11_7"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv11_8"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
    </LinearLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:weightSum="8"
        android:layout_weight="1"
        android:orientation="horizontal">
<ImageView
    android:id="@+id/iv10_1"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:layout_weight="1"
    android:scaleType="centerInside"
    android:src="@drawable/back1"
    ></ImageView>
        <ImageView
            android:id="@+id/iv10_2"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv10_3"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv10_4"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv10_5"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv10_6"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv10_7"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv10_8"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
    </LinearLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:weightSum="8"
        android:layout_weight="1"
        android:orientation="horizontal">
        <ImageView
            android:id="@+id/iv9_1"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv9_2"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv9_3"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv9_4"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv9_5"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv9_6"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv9_7"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv9_8"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
    </LinearLayout>


    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:weightSum="8"
        android:layout_weight="1"
        android:orientation="horizontal">
        <ImageView
            android:id="@+id/iv8_1"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv8_2"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv8_3"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv8_4"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv8_5"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv8_6"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv8_7"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv8_8"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
    </LinearLayout>
    <LinearLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:weightSum="8"
    android:layout_weight="1"
    android:orientation="horizontal">
    <ImageView
        android:id="@+id/iv7_1"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:scaleType="centerInside"
        android:src="@drawable/back1"
        ></ImageView>
    <ImageView
        android:id="@+id/iv7_2"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:scaleType="centerInside"
        android:src="@drawable/back1"
        ></ImageView>
    <ImageView
        android:id="@+id/iv7_3"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:scaleType="centerInside"
        android:src="@drawable/back1"
        ></ImageView>
    <ImageView
        android:id="@+id/iv7_4"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:scaleType="centerInside"
        android:src="@drawable/back1"
        ></ImageView>
    <ImageView
        android:id="@+id/iv7_5"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:scaleType="centerInside"
        android:src="@drawable/back1"
        ></ImageView>
    <ImageView
        android:id="@+id/iv7_6"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:scaleType="centerInside"
        android:src="@drawable/back1"
        ></ImageView>
    <ImageView
        android:id="@+id/iv7_7"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:scaleType="centerInside"
        android:src="@drawable/back1"
        ></ImageView>
    <ImageView
        android:id="@+id/iv7_8"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:scaleType="centerInside"
        android:src="@drawable/back1"
        ></ImageView>
</LinearLayout>
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:weightSum="8"
        android:layout_weight="1"
        android:orientation="horizontal">
        <ImageView
            android:id="@+id/iv6_1"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv6_2"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv6_3"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv6_4"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv6_5"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv6_6"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv6_7"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv6_8"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
    </LinearLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:weightSum="8"
        android:layout_weight="1"
        android:orientation="horizontal">
        <ImageView
            android:id="@+id/iv5_1"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv5_2"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv5_3"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv5_4"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv5_5"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv5_6"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv5_7"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv5_8"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
    </LinearLayout>
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:weightSum="8"
        android:layout_weight="1"
        android:orientation="horizontal">
        <ImageView
            android:id="@+id/iv4_1"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv4_2"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv4_3"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv4_4"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv4_5"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv4_6"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv4_7"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv4_8"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
    </LinearLayout>
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:weightSum="8"
        android:layout_weight="1"
        android:orientation="horizontal">
        <ImageView
            android:id="@+id/iv3_1"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv3_2"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv3_3"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv3_4"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv3_5"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv3_6"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv3_7"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv3_8"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
    </LinearLayout>
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:weightSum="8"
        android:layout_weight="1"
        android:orientation="horizontal">
        <ImageView
            android:id="@+id/iv2_1"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv2_2"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv2_3"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv2_4"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv2_5"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv2_6"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv2_7"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv2_8"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
    </LinearLayout>
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:weightSum="8"
        android:layout_weight="1"
        android:orientation="horizontal">
        <ImageView
            android:id="@+id/iv1_1"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv1_2"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv1_3"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv1_4"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv1_5"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv1_6"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv1_7"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
        <ImageView
            android:id="@+id/iv1_8"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:scaleType="centerInside"
            android:src="@drawable/back1"
            ></ImageView>
    </LinearLayout>



</LinearLayout>





<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="purple_200">#FFBB86FC</color>
    <color name="purple_500">#FF6200EE</color>
    <color name="purple_700">#FF3700B3</color>
    <color name="teal_200">#FF03DAC5</color>
    <color name="teal_700">#FF018786</color>
    <color name="black">#FF000000</color>
    <color name="white">#FFFFFFFF</color>
    <color name="green">#309834</color>
    <color name="red">#981919</color>
    <color name="purple">#6E3CC8</color>
    <color name="orange">#EA5020</color>
    <color name="blue">#03A9F4</color>
</resources>




<resources>
    <string name="app_name">Find Words Game</string>
    <string name="about_text1"></string>
    <string name="about_text2"></string>
</resources>



<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.FindWordsGame" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/purple_500</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
    </style>
    <style name="Button.Green" parent="ThemeOverlay.AppCompat">
        <item name="colorAccent">#00FF0A</item>
    </style>
</resources>





<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.FindWordsGame" parent="Theme.AppCompat.DayNight.NoActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/purple_200</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/black</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_200</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
    </style>
</resources>












plugins {
    id 'com.android.application'
}

android {
    namespace 'com.mytutorials.findwordsgame'
    compileSdk 33

    defaultConfig {
        applicationId "com.mytutorials.findwordsgame"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}




